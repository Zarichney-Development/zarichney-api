//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 649 // Disable "CS0649 Field is never assigned to, and will always have its default value null"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8600 // Disable "CS8600 Converting null literal or possible null value to non-nullable type"
#pragma warning disable 8602 // Disable "CS8602 Dereference of a possibly null reference"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"
#pragma warning disable 8765 // Disable "CS8765 Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes)."

namespace Zarichney.ApiClient.Models
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ApiErrorResult
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ApiErrorResult()

        {

        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ApiKeyResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ApiKeyResponse(System.DateTimeOffset? @createdAt, string? @description, System.DateTimeOffset? @expiresAt, int? @id, bool? @isActive, string? @keyValue, string? @name)

        {

            this.Id = @id;

            this.KeyValue = @keyValue;

            this.Name = @name;

            this.CreatedAt = @createdAt;

            this.ExpiresAt = @expiresAt;

            this.IsActive = @isActive;

            this.Description = @description;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public int? Id { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("keyValue")]
        public string? KeyValue { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]
        public System.DateTimeOffset? CreatedAt { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]
        public System.DateTimeOffset? ExpiresAt { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isActive")]
        public bool? IsActive { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record Assembly
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Assembly(string? @codeBase, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, System.Collections.Generic.ICollection<TypeInfo>? @definedTypes, MethodInfo? @entryPoint, string? @escapedCodeBase, System.Collections.Generic.ICollection<Type>? @exportedTypes, string? @fullName, bool? @globalAssemblyCache, long? @hostContext, string? @imageRuntimeVersion, bool? @isCollectible, bool? @isDynamic, bool? @isFullyTrusted, string? @location, Module? @manifestModule, System.Collections.Generic.ICollection<Module>? @modules, bool? @reflectionOnly, SecurityRuleSet? @securityRuleSet)

        {

            this.DefinedTypes = @definedTypes;

            this.ExportedTypes = @exportedTypes;

            this.CodeBase = @codeBase;

            this.EntryPoint = @entryPoint;

            this.FullName = @fullName;

            this.ImageRuntimeVersion = @imageRuntimeVersion;

            this.IsDynamic = @isDynamic;

            this.Location = @location;

            this.ReflectionOnly = @reflectionOnly;

            this.IsCollectible = @isCollectible;

            this.IsFullyTrusted = @isFullyTrusted;

            this.CustomAttributes = @customAttributes;

            this.EscapedCodeBase = @escapedCodeBase;

            this.ManifestModule = @manifestModule;

            this.Modules = @modules;

            this.GlobalAssemblyCache = @globalAssemblyCache;

            this.HostContext = @hostContext;

            this.SecurityRuleSet = @securityRuleSet;

        }
        [System.Text.Json.Serialization.JsonPropertyName("definedTypes")]
        public System.Collections.Generic.ICollection<TypeInfo>? DefinedTypes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("exportedTypes")]
        public System.Collections.Generic.ICollection<Type>? ExportedTypes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("codeBase")]
        [System.Obsolete]
        public string? CodeBase { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("entryPoint")]
        public MethodInfo? EntryPoint { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("fullName")]
        public string? FullName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("imageRuntimeVersion")]
        public string? ImageRuntimeVersion { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isDynamic")]
        public bool? IsDynamic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("location")]
        public string? Location { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectionOnly")]
        public bool? ReflectionOnly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFullyTrusted")]
        public bool? IsFullyTrusted { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("escapedCodeBase")]
        [System.Obsolete]
        public string? EscapedCodeBase { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("manifestModule")]
        public Module? ManifestModule { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("modules")]
        public System.Collections.Generic.ICollection<Module>? Modules { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("globalAssemblyCache")]
        [System.Obsolete]
        public bool? GlobalAssemblyCache { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("hostContext")]
        public long? HostContext { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("securityRuleSet")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public SecurityRuleSet? SecurityRuleSet { get; init; }

    }

    /// <summary>
    /// Standard response model for authentication operations.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AuthResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public AuthResponse(string? @email, string? @message, bool? @success)

        {

            this.Success = @success;

            this.Message = @message;

            this.Email = @email;

        }    /// <summary>
        /// Indicates whether the operation was successful.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("success")]
        public bool? Success { get; init; }

        /// <summary>
        /// A message describing the outcome of the operation.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; init; }

        /// <summary>
        /// The email address associated with the operation, if applicable.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record BadRequestObjectResult
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public BadRequestObjectResult(System.Collections.Generic.ICollection<string>? @contentTypes, Type? @declaredType, System.Collections.Generic.ICollection<IOutputFormatter>? @formatters, int? @statusCode, object? @value)

        {

            this.Value = @value;

            this.Formatters = @formatters;

            this.ContentTypes = @contentTypes;

            this.DeclaredType = @declaredType;

            this.StatusCode = @statusCode;

        }
        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public object? Value { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("formatters")]
        public System.Collections.Generic.ICollection<IOutputFormatter>? Formatters { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("contentTypes")]
        public System.Collections.Generic.ICollection<string>? ContentTypes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredType")]
        public Type? DeclaredType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("statusCode")]
        public int? StatusCode { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CallingConventions
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Standard")]
        Standard = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"VarArgs")]
        VarArgs = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Any")]
        Any = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"HasThis")]
        HasThis = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"ExplicitThis")]
        ExplicitThis = 4,

    }

    /// <summary>
    /// Information about a checkout session that can be shared with clients
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CheckoutSessionInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CheckoutSessionInfo(double? @amountTotal, string? @currency, string? @customerEmail, string? @id, string? @paymentStatus, string? @status)

        {

            this.Id = @id;

            this.Status = @status;

            this.CustomerEmail = @customerEmail;

            this.AmountTotal = @amountTotal;

            this.Currency = @currency;

            this.PaymentStatus = @paymentStatus;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customerEmail")]
        public string? CustomerEmail { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("amountTotal")]
        public double? AmountTotal { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        public string? Currency { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("paymentStatus")]
        public string? PaymentStatus { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CheckoutUrlResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CheckoutUrlResponse(string? @checkoutUrl)

        {

            this.CheckoutUrl = @checkoutUrl;

        }
        [System.Text.Json.Serialization.JsonPropertyName("checkoutUrl")]
        public string? CheckoutUrl { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ConfigurationItemStatus
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ConfigurationItemStatus(string? @details, string? @name, string? @status)

        {

            this.Name = @name;

            this.Status = @status;

            this.Details = @details;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public string? Details { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ConstructorInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ConstructorInfo(MethodAttributes? @attributes, CallingConventions? @callingConvention, bool? @containsGenericParameters, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, Type? @declaringType, bool? @isAbstract, bool? @isAssembly, bool? @isCollectible, bool? @isConstructedGenericMethod, bool? @isConstructor, bool? @isFamily, bool? @isFamilyAndAssembly, bool? @isFamilyOrAssembly, bool? @isFinal, bool? @isGenericMethod, bool? @isGenericMethodDefinition, bool? @isHideBySig, bool? @isPrivate, bool? @isPublic, bool? @isSecurityCritical, bool? @isSecuritySafeCritical, bool? @isSecurityTransparent, bool? @isSpecialName, bool? @isStatic, bool? @isVirtual, MemberTypes? @memberType, int? @metadataToken, RuntimeMethodHandle? @methodHandle, MethodImplAttributes? @methodImplementationFlags, Module? @module, string? @name, Type? @reflectedType)

        {

            this.Name = @name;

            this.DeclaringType = @declaringType;

            this.ReflectedType = @reflectedType;

            this.Module = @module;

            this.CustomAttributes = @customAttributes;

            this.IsCollectible = @isCollectible;

            this.MetadataToken = @metadataToken;

            this.Attributes = @attributes;

            this.MethodImplementationFlags = @methodImplementationFlags;

            this.CallingConvention = @callingConvention;

            this.IsAbstract = @isAbstract;

            this.IsConstructor = @isConstructor;

            this.IsFinal = @isFinal;

            this.IsHideBySig = @isHideBySig;

            this.IsSpecialName = @isSpecialName;

            this.IsStatic = @isStatic;

            this.IsVirtual = @isVirtual;

            this.IsAssembly = @isAssembly;

            this.IsFamily = @isFamily;

            this.IsFamilyAndAssembly = @isFamilyAndAssembly;

            this.IsFamilyOrAssembly = @isFamilyOrAssembly;

            this.IsPrivate = @isPrivate;

            this.IsPublic = @isPublic;

            this.IsConstructedGenericMethod = @isConstructedGenericMethod;

            this.IsGenericMethod = @isGenericMethod;

            this.IsGenericMethodDefinition = @isGenericMethodDefinition;

            this.ContainsGenericParameters = @containsGenericParameters;

            this.MethodHandle = @methodHandle;

            this.IsSecurityCritical = @isSecurityCritical;

            this.IsSecuritySafeCritical = @isSecuritySafeCritical;

            this.IsSecurityTransparent = @isSecurityTransparent;

            this.MemberType = @memberType;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type? DeclaringType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type? ReflectedType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module? Module { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodAttributes? Attributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("methodImplementationFlags")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodImplAttributes? MethodImplementationFlags { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("callingConvention")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CallingConventions? CallingConvention { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool? IsAbstract { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructor")]
        public bool? IsConstructor { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFinal")]
        public bool? IsFinal { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isHideBySig")]
        public bool? IsHideBySig { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool? IsSpecialName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isStatic")]
        public bool? IsStatic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isVirtual")]
        public bool? IsVirtual { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAssembly")]
        public bool? IsAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamily")]
        public bool? IsFamily { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyAndAssembly")]
        public bool? IsFamilyAndAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyOrAssembly")]
        public bool? IsFamilyOrAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrivate")]
        public bool? IsPrivate { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool? IsPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericMethod")]
        public bool? IsConstructedGenericMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethod")]
        public bool? IsGenericMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodDefinition")]
        public bool? IsGenericMethodDefinition { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool? ContainsGenericParameters { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("methodHandle")]
        public RuntimeMethodHandle? MethodHandle { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool? IsSecurityCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool? IsSecuritySafeCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool? IsSecurityTransparent { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes? MemberType { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CookbookContent
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CookbookContent(int? @expectedRecipeCount, System.Collections.Generic.ICollection<string>? @generalMealTypes, string? @recipeSpecificationType, System.Collections.Generic.ICollection<string>? @specificRecipes)

        {

            this.RecipeSpecificationType = @recipeSpecificationType;

            this.SpecificRecipes = @specificRecipes;

            this.GeneralMealTypes = @generalMealTypes;

            this.ExpectedRecipeCount = @expectedRecipeCount;

        }
        [System.Text.Json.Serialization.JsonPropertyName("recipeSpecificationType")]
        public string? RecipeSpecificationType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("specificRecipes")]
        public System.Collections.Generic.ICollection<string>? SpecificRecipes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("generalMealTypes")]
        public System.Collections.Generic.ICollection<string>? GeneralMealTypes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("expectedRecipeCount")]
        public int? ExpectedRecipeCount { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CookbookDetails
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CookbookDetails(string? @culturalExploration, System.Collections.Generic.ICollection<string>? @desiredCuisines, System.Collections.Generic.ICollection<string>? @educationalContent, string? @ingredientFlexibility, string? @nutritionalGuidance, string? @organization, string? @overallStyle, System.Collections.Generic.ICollection<string>? @practicalFeatures, string? @primaryPurpose, string? @recipeModification, System.Collections.Generic.ICollection<string>? @specialSections, string? @storytelling, string? @theme)

        {

            this.Theme = @theme;

            this.PrimaryPurpose = @primaryPurpose;

            this.DesiredCuisines = @desiredCuisines;

            this.CulturalExploration = @culturalExploration;

            this.NutritionalGuidance = @nutritionalGuidance;

            this.RecipeModification = @recipeModification;

            this.IngredientFlexibility = @ingredientFlexibility;

            this.OverallStyle = @overallStyle;

            this.Organization = @organization;

            this.SpecialSections = @specialSections;

            this.Storytelling = @storytelling;

            this.EducationalContent = @educationalContent;

            this.PracticalFeatures = @practicalFeatures;

        }
        [System.Text.Json.Serialization.JsonPropertyName("theme")]
        public string? Theme { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("primaryPurpose")]
        public string? PrimaryPurpose { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("desiredCuisines")]
        public System.Collections.Generic.ICollection<string>? DesiredCuisines { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("culturalExploration")]
        public string? CulturalExploration { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("nutritionalGuidance")]
        public string? NutritionalGuidance { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("recipeModification")]
        public string? RecipeModification { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("ingredientFlexibility")]
        public string? IngredientFlexibility { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("overallStyle")]
        public string? OverallStyle { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("organization")]
        public string? Organization { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("specialSections")]
        public System.Collections.Generic.ICollection<string>? SpecialSections { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("storytelling")]
        public string? Storytelling { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("educationalContent")]
        public System.Collections.Generic.ICollection<string>? EducationalContent { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("practicalFeatures")]
        public System.Collections.Generic.ICollection<string>? PracticalFeatures { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CookbookOrder
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CookbookOrder(CookbookContent? @cookbookContent, CookbookDetails? @cookbookDetails, Customer? @customer, string? @email, string? @llmConversationId, string? @orderId, System.Collections.Generic.ICollection<string>? @recipeList, bool? @requiresPayment, OrderStatus? @status, System.Collections.Generic.ICollection<SynthesizedRecipe>? @synthesizedRecipes, UserDetails? @userDetails)

        {

            this.Email = @email;

            this.CookbookContent = @cookbookContent;

            this.CookbookDetails = @cookbookDetails;

            this.UserDetails = @userDetails;

            this.OrderId = @orderId;

            this.RecipeList = @recipeList;

            this.SynthesizedRecipes = @synthesizedRecipes;

            this.Status = @status;

            this.RequiresPayment = @requiresPayment;

            this.Customer = @customer;

            this.LlmConversationId = @llmConversationId;

        }
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("cookbookContent")]
        public CookbookContent? CookbookContent { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("cookbookDetails")]
        public CookbookDetails? CookbookDetails { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("userDetails")]
        public UserDetails? UserDetails { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("orderId")]
        public string? OrderId { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("recipeList")]
        public System.Collections.Generic.ICollection<string>? RecipeList { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("synthesizedRecipes")]
        public System.Collections.Generic.ICollection<SynthesizedRecipe>? SynthesizedRecipes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public OrderStatus? Status { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("requiresPayment")]
        public bool? RequiresPayment { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]
        public Customer? Customer { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("llmConversationId")]
        public string? LlmConversationId { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CookbookOrderSubmission
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CookbookOrderSubmission(CookbookContent? @cookbookContent, CookbookDetails? @cookbookDetails, string? @email, UserDetails? @userDetails)

        {

            this.Email = @email;

            this.CookbookContent = @cookbookContent;

            this.CookbookDetails = @cookbookDetails;

            this.UserDetails = @userDetails;

        }
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("cookbookContent")]
        public CookbookContent? CookbookContent { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("cookbookDetails")]
        public CookbookDetails? CookbookDetails { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("userDetails")]
        public UserDetails? UserDetails { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CreateApiKeyCommand
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CreateApiKeyCommand(string? @description, System.DateTimeOffset? @expiresAt, string @name)

        {

            this.Name = @name;

            this.Description = @description;

            this.ExpiresAt = @expiresAt;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength = 1)]
        public string Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Description { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]
        public System.DateTimeOffset? ExpiresAt { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CustomAttributeData
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CustomAttributeData(Type? @attributeType, ConstructorInfo? @constructor, System.Collections.Generic.ICollection<CustomAttributeTypedArgument>? @constructorArguments, System.Collections.Generic.ICollection<CustomAttributeNamedArgument>? @namedArguments)

        {

            this.AttributeType = @attributeType;

            this.Constructor = @constructor;

            this.ConstructorArguments = @constructorArguments;

            this.NamedArguments = @namedArguments;

        }
        [System.Text.Json.Serialization.JsonPropertyName("attributeType")]
        public Type? AttributeType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("constructor")]
        public ConstructorInfo? Constructor { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("constructorArguments")]
        public System.Collections.Generic.ICollection<CustomAttributeTypedArgument>? ConstructorArguments { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("namedArguments")]
        public System.Collections.Generic.ICollection<CustomAttributeNamedArgument>? NamedArguments { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CustomAttributeNamedArgument
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CustomAttributeNamedArgument(bool? @isField, MemberInfo? @memberInfo, string? @memberName, CustomAttributeTypedArgument? @typedValue)

        {

            this.MemberInfo = @memberInfo;

            this.TypedValue = @typedValue;

            this.MemberName = @memberName;

            this.IsField = @isField;

        }
        [System.Text.Json.Serialization.JsonPropertyName("memberInfo")]
        public MemberInfo? MemberInfo { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("typedValue")]
        public CustomAttributeTypedArgument? TypedValue { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("memberName")]
        public string? MemberName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isField")]
        public bool? IsField { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CustomAttributeTypedArgument
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CustomAttributeTypedArgument(Type? @argumentType, object? @value)

        {

            this.ArgumentType = @argumentType;

            this.Value = @value;

        }
        [System.Text.Json.Serialization.JsonPropertyName("argumentType")]
        public Type? ArgumentType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public object? Value { get; init; }

    }

    /// <summary>
    /// Represents a user/customer of the Cookbook service.
    /// <br/>Tracks how many recipe credits they have available (for free usage or otherwise).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record Customer
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Customer(int? @availableRecipes, string? @email, int? @lifetimePurchasedRecipes, int? @lifetimeRecipesUsed)

        {

            this.Email = @email;

            this.AvailableRecipes = @availableRecipes;

            this.LifetimeRecipesUsed = @lifetimeRecipesUsed;

            this.LifetimePurchasedRecipes = @lifetimePurchasedRecipes;

        }    /// <summary>
        /// Unique key for identifying the customer.
        /// <br/>Currently, using email as the primary key.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

        /// <summary>
        /// How many recipes the user can still generate without paying (e.g. free allotment or purchased credits).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("availableRecipes")]
        public int? AvailableRecipes { get; init; }

        /// <summary>
        /// Total number of recipes that have been synthesized for this user across all orders (historical).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lifetimeRecipesUsed")]
        public int? LifetimeRecipesUsed { get; init; }

        /// <summary>
        /// Total number of recipes that have been purchased by this user (historical).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lifetimePurchasedRecipes")]
        public int? LifetimePurchasedRecipes { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum EventAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record EventInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public EventInfo(MethodInfo? @addMethod, EventAttributes? @attributes, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, Type? @declaringType, Type? @eventHandlerType, bool? @isCollectible, bool? @isMulticast, bool? @isSpecialName, MemberTypes? @memberType, int? @metadataToken, Module? @module, string? @name, MethodInfo? @raiseMethod, Type? @reflectedType, MethodInfo? @removeMethod)

        {

            this.Name = @name;

            this.DeclaringType = @declaringType;

            this.ReflectedType = @reflectedType;

            this.Module = @module;

            this.CustomAttributes = @customAttributes;

            this.IsCollectible = @isCollectible;

            this.MetadataToken = @metadataToken;

            this.MemberType = @memberType;

            this.Attributes = @attributes;

            this.IsSpecialName = @isSpecialName;

            this.AddMethod = @addMethod;

            this.RemoveMethod = @removeMethod;

            this.RaiseMethod = @raiseMethod;

            this.IsMulticast = @isMulticast;

            this.EventHandlerType = @eventHandlerType;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type? DeclaringType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type? ReflectedType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module? Module { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes? MemberType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public EventAttributes? Attributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool? IsSpecialName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("addMethod")]
        public MethodInfo? AddMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("removeMethod")]
        public MethodInfo? RemoveMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("raiseMethod")]
        public MethodInfo? RaiseMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isMulticast")]
        public bool? IsMulticast { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("eventHandlerType")]
        public Type? EventHandlerType { get; init; }

    }

    /// <summary>
    /// Defines all the features available in the application that can be enabled or disabled
    /// <br/>based on configuration availability.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ExternalServices
    {

        [System.Runtime.Serialization.EnumMember(Value = @"FrontEnd")]
        FrontEnd = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"OpenAiApi")]
        OpenAiApi = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"MsGraph")]
        MsGraph = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Stripe")]
        Stripe = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"GitHubAccess")]
        GitHubAccess = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"MailCheck")]
        MailCheck = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"PostgresIdentityDb")]
        PostgresIdentityDb = 6,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum FieldAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PrivateScope")]
        PrivateScope = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Private")]
        Private = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"FamANDAssem")]
        FamANDAssem = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Assembly")]
        Assembly = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Family")]
        Family = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"FamORAssem")]
        FamORAssem = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Public")]
        Public = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"FieldAccessMask")]
        FieldAccessMask = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"Static")]
        Static = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"InitOnly")]
        InitOnly = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"Literal")]
        Literal = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"NotSerialized")]
        NotSerialized = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"HasFieldRVA")]
        HasFieldRVA = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"HasFieldMarshal")]
        HasFieldMarshal = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"PinvokeImpl")]
        PinvokeImpl = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"HasDefault")]
        HasDefault = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 18,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record FieldInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public FieldInfo(FieldAttributes? @attributes, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, Type? @declaringType, RuntimeFieldHandle? @fieldHandle, Type? @fieldType, bool? @isAssembly, bool? @isCollectible, bool? @isFamily, bool? @isFamilyAndAssembly, bool? @isFamilyOrAssembly, bool? @isInitOnly, bool? @isLiteral, bool? @isNotSerialized, bool? @isPinvokeImpl, bool? @isPrivate, bool? @isPublic, bool? @isSecurityCritical, bool? @isSecuritySafeCritical, bool? @isSecurityTransparent, bool? @isSpecialName, bool? @isStatic, MemberTypes? @memberType, int? @metadataToken, Module? @module, string? @name, Type? @reflectedType)

        {

            this.Name = @name;

            this.DeclaringType = @declaringType;

            this.ReflectedType = @reflectedType;

            this.Module = @module;

            this.CustomAttributes = @customAttributes;

            this.IsCollectible = @isCollectible;

            this.MetadataToken = @metadataToken;

            this.MemberType = @memberType;

            this.Attributes = @attributes;

            this.FieldType = @fieldType;

            this.IsInitOnly = @isInitOnly;

            this.IsLiteral = @isLiteral;

            this.IsNotSerialized = @isNotSerialized;

            this.IsPinvokeImpl = @isPinvokeImpl;

            this.IsSpecialName = @isSpecialName;

            this.IsStatic = @isStatic;

            this.IsAssembly = @isAssembly;

            this.IsFamily = @isFamily;

            this.IsFamilyAndAssembly = @isFamilyAndAssembly;

            this.IsFamilyOrAssembly = @isFamilyOrAssembly;

            this.IsPrivate = @isPrivate;

            this.IsPublic = @isPublic;

            this.IsSecurityCritical = @isSecurityCritical;

            this.IsSecuritySafeCritical = @isSecuritySafeCritical;

            this.IsSecurityTransparent = @isSecurityTransparent;

            this.FieldHandle = @fieldHandle;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type? DeclaringType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type? ReflectedType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module? Module { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes? MemberType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public FieldAttributes? Attributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("fieldType")]
        public Type? FieldType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isInitOnly")]
        public bool? IsInitOnly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isLiteral")]
        public bool? IsLiteral { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNotSerialized")]
        [System.Obsolete]
        public bool? IsNotSerialized { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPinvokeImpl")]
        public bool? IsPinvokeImpl { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool? IsSpecialName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isStatic")]
        public bool? IsStatic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAssembly")]
        public bool? IsAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamily")]
        public bool? IsFamily { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyAndAssembly")]
        public bool? IsFamilyAndAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyOrAssembly")]
        public bool? IsFamilyOrAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrivate")]
        public bool? IsPrivate { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool? IsPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool? IsSecurityCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool? IsSecuritySafeCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool? IsSecurityTransparent { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("fieldHandle")]
        public RuntimeFieldHandle? FieldHandle { get; init; }

    }

    /// <summary>
    /// Request model to initiate the forgot password process.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ForgotPasswordRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ForgotPasswordRequest(string? @email)

        {

            this.Email = @email;

        }    /// <summary>
        /// The email address of the user who forgot their password.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GenericParameterAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Covariant")]
        Covariant = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Contravariant")]
        Contravariant = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"VarianceMask")]
        VarianceMask = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"ReferenceTypeConstraint")]
        ReferenceTypeConstraint = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"NotNullableValueTypeConstraint")]
        NotNullableValueTypeConstraint = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"DefaultConstructorConstraint")]
        DefaultConstructorConstraint = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialConstraintMask")]
        SpecialConstraintMask = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ICustomAttributeProvider
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ICustomAttributeProvider()

        {

        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record IOutputFormatter
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public IOutputFormatter()

        {

        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record IntPtr
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public IntPtr()

        {

        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum LayoutKind
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Sequential")]
        Sequential = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Explicit")]
        Explicit = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Auto")]
        Auto = 2,

    }

    /// <summary>
    /// Request model for user login.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record LoginRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public LoginRequest(string? @email, string? @password)

        {

            this.Email = @email;

            this.Password = @password;

        }    /// <summary>
        /// The user's registered email address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

        /// <summary>
        /// The user's password.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("password")]
        public string? Password { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record MemberInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public MemberInfo(System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, Type? @declaringType, bool? @isCollectible, MemberTypes? @memberType, int? @metadataToken, Module? @module, string? @name, Type? @reflectedType)

        {

            this.MemberType = @memberType;

            this.Name = @name;

            this.DeclaringType = @declaringType;

            this.ReflectedType = @reflectedType;

            this.Module = @module;

            this.CustomAttributes = @customAttributes;

            this.IsCollectible = @isCollectible;

            this.MetadataToken = @metadataToken;

        }
        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes? MemberType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type? DeclaringType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type? ReflectedType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module? Module { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MemberTypes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Constructor")]
        Constructor = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Event")]
        Event = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Field")]
        Field = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Method")]
        Method = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Property")]
        Property = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"TypeInfo")]
        TypeInfo = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Custom")]
        Custom = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedType")]
        NestedType = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"All")]
        All = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MethodAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PrivateScope")]
        PrivateScope = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Private")]
        Private = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"FamANDAssem")]
        FamANDAssem = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Assembly")]
        Assembly = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Family")]
        Family = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"FamORAssem")]
        FamORAssem = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Public")]
        Public = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"MemberAccessMask")]
        MemberAccessMask = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"UnmanagedExport")]
        UnmanagedExport = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"Static")]
        Static = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"Final")]
        Final = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"Virtual")]
        Virtual = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"HideBySig")]
        HideBySig = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"NewSlot")]
        NewSlot = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"CheckAccessOnOverride")]
        CheckAccessOnOverride = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"Abstract")]
        Abstract = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"PinvokeImpl")]
        PinvokeImpl = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"HasSecurity")]
        HasSecurity = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"RequireSecObject")]
        RequireSecObject = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 21,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record MethodBase
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public MethodBase(MethodAttributes? @attributes, CallingConventions? @callingConvention, bool? @containsGenericParameters, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, Type? @declaringType, bool? @isAbstract, bool? @isAssembly, bool? @isCollectible, bool? @isConstructedGenericMethod, bool? @isConstructor, bool? @isFamily, bool? @isFamilyAndAssembly, bool? @isFamilyOrAssembly, bool? @isFinal, bool? @isGenericMethod, bool? @isGenericMethodDefinition, bool? @isHideBySig, bool? @isPrivate, bool? @isPublic, bool? @isSecurityCritical, bool? @isSecuritySafeCritical, bool? @isSecurityTransparent, bool? @isSpecialName, bool? @isStatic, bool? @isVirtual, MemberTypes? @memberType, int? @metadataToken, RuntimeMethodHandle? @methodHandle, MethodImplAttributes? @methodImplementationFlags, Module? @module, string? @name, Type? @reflectedType)

        {

            this.MemberType = @memberType;

            this.Name = @name;

            this.DeclaringType = @declaringType;

            this.ReflectedType = @reflectedType;

            this.Module = @module;

            this.CustomAttributes = @customAttributes;

            this.IsCollectible = @isCollectible;

            this.MetadataToken = @metadataToken;

            this.Attributes = @attributes;

            this.MethodImplementationFlags = @methodImplementationFlags;

            this.CallingConvention = @callingConvention;

            this.IsAbstract = @isAbstract;

            this.IsConstructor = @isConstructor;

            this.IsFinal = @isFinal;

            this.IsHideBySig = @isHideBySig;

            this.IsSpecialName = @isSpecialName;

            this.IsStatic = @isStatic;

            this.IsVirtual = @isVirtual;

            this.IsAssembly = @isAssembly;

            this.IsFamily = @isFamily;

            this.IsFamilyAndAssembly = @isFamilyAndAssembly;

            this.IsFamilyOrAssembly = @isFamilyOrAssembly;

            this.IsPrivate = @isPrivate;

            this.IsPublic = @isPublic;

            this.IsConstructedGenericMethod = @isConstructedGenericMethod;

            this.IsGenericMethod = @isGenericMethod;

            this.IsGenericMethodDefinition = @isGenericMethodDefinition;

            this.ContainsGenericParameters = @containsGenericParameters;

            this.MethodHandle = @methodHandle;

            this.IsSecurityCritical = @isSecurityCritical;

            this.IsSecuritySafeCritical = @isSecuritySafeCritical;

            this.IsSecurityTransparent = @isSecurityTransparent;

        }
        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes? MemberType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type? DeclaringType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type? ReflectedType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module? Module { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodAttributes? Attributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("methodImplementationFlags")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodImplAttributes? MethodImplementationFlags { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("callingConvention")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CallingConventions? CallingConvention { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool? IsAbstract { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructor")]
        public bool? IsConstructor { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFinal")]
        public bool? IsFinal { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isHideBySig")]
        public bool? IsHideBySig { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool? IsSpecialName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isStatic")]
        public bool? IsStatic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isVirtual")]
        public bool? IsVirtual { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAssembly")]
        public bool? IsAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamily")]
        public bool? IsFamily { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyAndAssembly")]
        public bool? IsFamilyAndAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyOrAssembly")]
        public bool? IsFamilyOrAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrivate")]
        public bool? IsPrivate { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool? IsPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericMethod")]
        public bool? IsConstructedGenericMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethod")]
        public bool? IsGenericMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodDefinition")]
        public bool? IsGenericMethodDefinition { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool? ContainsGenericParameters { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("methodHandle")]
        public RuntimeMethodHandle? MethodHandle { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool? IsSecurityCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool? IsSecuritySafeCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool? IsSecurityTransparent { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MethodImplAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"IL")]
        IL = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Native")]
        Native = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"OPTIL")]
        OPTIL = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"CodeTypeMask")]
        CodeTypeMask = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"ManagedMask")]
        ManagedMask = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"NoInlining")]
        NoInlining = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"ForwardRef")]
        ForwardRef = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"Synchronized")]
        Synchronized = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"NoOptimization")]
        NoOptimization = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"PreserveSig")]
        PreserveSig = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"AggressiveInlining")]
        AggressiveInlining = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"AggressiveOptimization")]
        AggressiveOptimization = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"InternalCall")]
        InternalCall = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"MaxMethodImplVal")]
        MaxMethodImplVal = 13,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record MethodInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public MethodInfo(MethodAttributes? @attributes, CallingConventions? @callingConvention, bool? @containsGenericParameters, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, Type? @declaringType, bool? @isAbstract, bool? @isAssembly, bool? @isCollectible, bool? @isConstructedGenericMethod, bool? @isConstructor, bool? @isFamily, bool? @isFamilyAndAssembly, bool? @isFamilyOrAssembly, bool? @isFinal, bool? @isGenericMethod, bool? @isGenericMethodDefinition, bool? @isHideBySig, bool? @isPrivate, bool? @isPublic, bool? @isSecurityCritical, bool? @isSecuritySafeCritical, bool? @isSecurityTransparent, bool? @isSpecialName, bool? @isStatic, bool? @isVirtual, MemberTypes? @memberType, int? @metadataToken, RuntimeMethodHandle? @methodHandle, MethodImplAttributes? @methodImplementationFlags, Module? @module, string? @name, Type? @reflectedType, ParameterInfo? @returnParameter, Type? @returnType, ICustomAttributeProvider? @returnTypeCustomAttributes)

        {

            this.Name = @name;

            this.DeclaringType = @declaringType;

            this.ReflectedType = @reflectedType;

            this.Module = @module;

            this.CustomAttributes = @customAttributes;

            this.IsCollectible = @isCollectible;

            this.MetadataToken = @metadataToken;

            this.Attributes = @attributes;

            this.MethodImplementationFlags = @methodImplementationFlags;

            this.CallingConvention = @callingConvention;

            this.IsAbstract = @isAbstract;

            this.IsConstructor = @isConstructor;

            this.IsFinal = @isFinal;

            this.IsHideBySig = @isHideBySig;

            this.IsSpecialName = @isSpecialName;

            this.IsStatic = @isStatic;

            this.IsVirtual = @isVirtual;

            this.IsAssembly = @isAssembly;

            this.IsFamily = @isFamily;

            this.IsFamilyAndAssembly = @isFamilyAndAssembly;

            this.IsFamilyOrAssembly = @isFamilyOrAssembly;

            this.IsPrivate = @isPrivate;

            this.IsPublic = @isPublic;

            this.IsConstructedGenericMethod = @isConstructedGenericMethod;

            this.IsGenericMethod = @isGenericMethod;

            this.IsGenericMethodDefinition = @isGenericMethodDefinition;

            this.ContainsGenericParameters = @containsGenericParameters;

            this.MethodHandle = @methodHandle;

            this.IsSecurityCritical = @isSecurityCritical;

            this.IsSecuritySafeCritical = @isSecuritySafeCritical;

            this.IsSecurityTransparent = @isSecurityTransparent;

            this.MemberType = @memberType;

            this.ReturnParameter = @returnParameter;

            this.ReturnType = @returnType;

            this.ReturnTypeCustomAttributes = @returnTypeCustomAttributes;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type? DeclaringType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type? ReflectedType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module? Module { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodAttributes? Attributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("methodImplementationFlags")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodImplAttributes? MethodImplementationFlags { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("callingConvention")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CallingConventions? CallingConvention { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool? IsAbstract { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructor")]
        public bool? IsConstructor { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFinal")]
        public bool? IsFinal { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isHideBySig")]
        public bool? IsHideBySig { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool? IsSpecialName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isStatic")]
        public bool? IsStatic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isVirtual")]
        public bool? IsVirtual { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAssembly")]
        public bool? IsAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamily")]
        public bool? IsFamily { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyAndAssembly")]
        public bool? IsFamilyAndAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyOrAssembly")]
        public bool? IsFamilyOrAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrivate")]
        public bool? IsPrivate { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool? IsPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericMethod")]
        public bool? IsConstructedGenericMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethod")]
        public bool? IsGenericMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodDefinition")]
        public bool? IsGenericMethodDefinition { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool? ContainsGenericParameters { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("methodHandle")]
        public RuntimeMethodHandle? MethodHandle { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool? IsSecurityCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool? IsSecuritySafeCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool? IsSecurityTransparent { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes? MemberType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("returnParameter")]
        public ParameterInfo? ReturnParameter { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("returnType")]
        public Type? ReturnType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("returnTypeCustomAttributes")]
        public ICustomAttributeProvider? ReturnTypeCustomAttributes { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record Module
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Module(Assembly? @assembly, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, string? @fullyQualifiedName, int? @mdStreamVersion, int? @metadataToken, ModuleHandle? @moduleHandle, System.Guid? @moduleVersionId, string? @name, string? @scopeName)

        {

            this.Assembly = @assembly;

            this.FullyQualifiedName = @fullyQualifiedName;

            this.Name = @name;

            this.MdStreamVersion = @mdStreamVersion;

            this.ModuleVersionId = @moduleVersionId;

            this.ScopeName = @scopeName;

            this.ModuleHandle = @moduleHandle;

            this.CustomAttributes = @customAttributes;

            this.MetadataToken = @metadataToken;

        }
        [System.Text.Json.Serialization.JsonPropertyName("assembly")]
        public Assembly? Assembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("fullyQualifiedName")]
        public string? FullyQualifiedName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("mdStreamVersion")]
        public int? MdStreamVersion { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("moduleVersionId")]
        public System.Guid? ModuleVersionId { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("scopeName")]
        public string? ScopeName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("moduleHandle")]
        public ModuleHandle? ModuleHandle { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ModuleHandle
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ModuleHandle(int? @mdStreamVersion)

        {

            this.MdStreamVersion = @mdStreamVersion;

        }
        [System.Text.Json.Serialization.JsonPropertyName("mdStreamVersion")]
        public int? MdStreamVersion { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record NotFoundResult
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public NotFoundResult(int? @statusCode)

        {

            this.StatusCode = @statusCode;

        }
        [System.Text.Json.Serialization.JsonPropertyName("statusCode")]
        public int? StatusCode { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum OrderStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Submitted")]
        Submitted = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"InProgress")]
        InProgress = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Completed")]
        Completed = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Paid")]
        Paid = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Failed")]
        Failed = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"AwaitingPayment")]
        AwaitingPayment = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ParameterAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"In")]
        In = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Out")]
        Out = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Lcid")]
        Lcid = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Retval")]
        Retval = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Optional")]
        Optional = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"HasDefault")]
        HasDefault = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"HasFieldMarshal")]
        HasFieldMarshal = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved3")]
        Reserved3 = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved4")]
        Reserved4 = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 10,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ParameterInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ParameterInfo(ParameterAttributes? @attributes, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, object? @defaultValue, bool? @hasDefaultValue, bool? @isIn, bool? @isLcid, bool? @isOptional, bool? @isOut, bool? @isRetval, MemberInfo? @member, int? @metadataToken, string? @name, Type? @parameterType, int? @position, object? @rawDefaultValue)

        {

            this.Attributes = @attributes;

            this.Member = @member;

            this.Name = @name;

            this.ParameterType = @parameterType;

            this.Position = @position;

            this.IsIn = @isIn;

            this.IsLcid = @isLcid;

            this.IsOptional = @isOptional;

            this.IsOut = @isOut;

            this.IsRetval = @isRetval;

            this.DefaultValue = @defaultValue;

            this.RawDefaultValue = @rawDefaultValue;

            this.HasDefaultValue = @hasDefaultValue;

            this.CustomAttributes = @customAttributes;

            this.MetadataToken = @metadataToken;

        }
        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ParameterAttributes? Attributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("member")]
        public MemberInfo? Member { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("parameterType")]
        public Type? ParameterType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("position")]
        public int? Position { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isIn")]
        public bool? IsIn { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isLcid")]
        public bool? IsLcid { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isOptional")]
        public bool? IsOptional { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isOut")]
        public bool? IsOut { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isRetval")]
        public bool? IsRetval { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("defaultValue")]
        public object? DefaultValue { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("rawDefaultValue")]
        public object? RawDefaultValue { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("hasDefaultValue")]
        public bool? HasDefaultValue { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record PaymentIntentRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PaymentIntentRequest(long? @amount, string? @currency, string? @description)

        {

            this.Amount = @amount;

            this.Currency = @currency;

            this.Description = @description;

        }
        [System.Text.Json.Serialization.JsonPropertyName("amount")]
        public long? Amount { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        public string? Currency { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ProblemDetails
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ProblemDetails(string? @detail, string? @instance, int? @status, string? @title, string? @type)

        {

            this.Type = @type;

            this.Title = @title;

            this.Status = @status;

            this.Detail = @detail;

            this.Instance = @instance;

        }
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string? Title { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public int? Status { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("detail")]
        public string? Detail { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("instance")]
        public string? Instance { get; init; }

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PropertyAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"HasDefault")]
        HasDefault = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved2")]
        Reserved2 = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved3")]
        Reserved3 = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved4")]
        Reserved4 = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record PropertyInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PropertyInfo(PropertyAttributes? @attributes, bool? @canRead, bool? @canWrite, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, Type? @declaringType, MethodInfo? @getMethod, bool? @isCollectible, bool? @isSpecialName, MemberTypes? @memberType, int? @metadataToken, Module? @module, string? @name, Type? @propertyType, Type? @reflectedType, MethodInfo? @setMethod)

        {

            this.Name = @name;

            this.DeclaringType = @declaringType;

            this.ReflectedType = @reflectedType;

            this.Module = @module;

            this.CustomAttributes = @customAttributes;

            this.IsCollectible = @isCollectible;

            this.MetadataToken = @metadataToken;

            this.MemberType = @memberType;

            this.PropertyType = @propertyType;

            this.Attributes = @attributes;

            this.IsSpecialName = @isSpecialName;

            this.CanRead = @canRead;

            this.CanWrite = @canWrite;

            this.GetMethod = @getMethod;

            this.SetMethod = @setMethod;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type? DeclaringType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type? ReflectedType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module? Module { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes? MemberType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("propertyType")]
        public Type? PropertyType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public PropertyAttributes? Attributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool? IsSpecialName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("canRead")]
        public bool? CanRead { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("canWrite")]
        public bool? CanWrite { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("getMethod")]
        public MethodInfo? GetMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("setMethod")]
        public MethodInfo? SetMethod { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record Recipe
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Recipe(System.Collections.Generic.ICollection<string>? @aliases, bool? @cleaned, string? @cookTime, string? @description, System.Collections.Generic.ICollection<string>? @directions, string? @id, string? @imageUrl, string? @indexTitle, System.Collections.Generic.ICollection<string>? @ingredients, string? @notes, string? @prepTime, string? @recipeUrl, System.Collections.Generic.IDictionary<string, RelevancyResult>? @relevancy, string? @servings, string? @title, string? @totalTime)

        {

            this.Id = @id;

            this.Title = @title;

            this.Description = @description;

            this.Servings = @servings;

            this.PrepTime = @prepTime;

            this.CookTime = @cookTime;

            this.TotalTime = @totalTime;

            this.Ingredients = @ingredients;

            this.Directions = @directions;

            this.Notes = @notes;

            this.Cleaned = @cleaned;

            this.RecipeUrl = @recipeUrl;

            this.ImageUrl = @imageUrl;

            this.Aliases = @aliases;

            this.IndexTitle = @indexTitle;

            this.Relevancy = @relevancy;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string? Title { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("servings")]
        public string? Servings { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("prepTime")]
        public string? PrepTime { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("cookTime")]
        public string? CookTime { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("totalTime")]
        public string? TotalTime { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("ingredients")]
        public System.Collections.Generic.ICollection<string>? Ingredients { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("directions")]
        public System.Collections.Generic.ICollection<string>? Directions { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        public string? Notes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("cleaned")]
        public bool? Cleaned { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("recipeUrl")]
        public string? RecipeUrl { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrl")]
        public string? ImageUrl { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("aliases")]
        public System.Collections.Generic.ICollection<string>? Aliases { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("indexTitle")]
        public string? IndexTitle { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("relevancy")]
        public System.Collections.Generic.IDictionary<string, RelevancyResult>? Relevancy { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record RecipeCreditRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public RecipeCreditRequest(string? @email, int? @recipeCount)

        {

            this.Email = @email;

            this.RecipeCount = @recipeCount;

        }
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("recipeCount")]
        public int? RecipeCount { get; init; }

    }

    /// <summary>
    /// Request model for user registration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record RegisterRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public RegisterRequest(string? @email, string? @password)

        {

            this.Email = @email;

            this.Password = @password;

        }    /// <summary>
        /// The user's desired email address. Must be unique.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

        /// <summary>
        /// The user's chosen password. Minimum length and complexity requirements may apply (defined server-side).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("password")]
        public string? Password { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record RelevancyResult
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public RelevancyResult(string? @query, string? @reasoning, int? @score)

        {

            this.Query = @query;

            this.Score = @score;

            this.Reasoning = @reasoning;

        }
        [System.Text.Json.Serialization.JsonPropertyName("query")]
        public string? Query { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("score")]
        public int? Score { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reasoning")]
        public string? Reasoning { get; init; }

    }

    /// <summary>
    /// Request model for resending the email confirmation link.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ResendConfirmationRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ResendConfirmationRequest(string? @email)

        {

            this.Email = @email;

        }    /// <summary>
        /// The email address to resend the confirmation link to.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

    }

    /// <summary>
    /// Request model to reset the password using a token.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ResetPasswordRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ResetPasswordRequest(string? @email, string? @newPassword, string? @token)

        {

            this.Email = @email;

            this.Token = @token;

            this.NewPassword = @newPassword;

        }    /// <summary>
        /// The email address of the user resetting their password.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

        /// <summary>
        /// The password reset token received via email.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; init; }

        /// <summary>
        /// The user's desired new password.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("newPassword")]
        public string? NewPassword { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record RoleCommandResult
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public RoleCommandResult(string? @message, System.Collections.Generic.ICollection<string>? @roles, bool? @success)

        {

            this.Success = @success;

            this.Message = @message;

            this.Roles = @roles;

        }
        [System.Text.Json.Serialization.JsonPropertyName("success")]
        public bool? Success { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("roles")]
        public System.Collections.Generic.ICollection<string>? Roles { get; init; }

    }

    /// <summary>
    /// Request model for assigning or removing user roles.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record RoleRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public RoleRequest(string? @identifier, string? @roleName)

        {

            this.Identifier = @identifier;

            this.RoleName = @roleName;

        }    /// <summary>
        /// The unique identifier of the target user (user ID or email address).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identifier")]
        public string? Identifier { get; init; }

        /// <summary>
        /// The name of the role to add or remove (e.g., "admin", "editor"). Case sensitivity depends on the underlying store.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("roleName")]
        public string? RoleName { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record RuntimeFieldHandle
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public RuntimeFieldHandle(IntPtr? @value)

        {

            this.Value = @value;

        }
        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public IntPtr? Value { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record RuntimeMethodHandle
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public RuntimeMethodHandle(IntPtr? @value)

        {

            this.Value = @value;

        }
        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public IntPtr? Value { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record RuntimeTypeHandle
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public RuntimeTypeHandle(IntPtr? @value)

        {

            this.Value = @value;

        }
        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public IntPtr? Value { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum SecurityRuleSet
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Level1")]
        Level1 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Level2")]
        Level2 = 2,

    }

    /// <summary>
    /// Represents the status of a service based on its configuration availability.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ServiceStatusInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ServiceStatusInfo(bool? @isAvailable, System.Collections.Generic.ICollection<string>? @missingConfigurations, ExternalServices? @serviceName)

        {

            this.ServiceName = @serviceName;

            this.IsAvailable = @isAvailable;

            this.MissingConfigurations = @missingConfigurations;

        }
        [System.Text.Json.Serialization.JsonPropertyName("serviceName")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ExternalServices? ServiceName { get; init; }

        /// <summary>
        /// Whether the service is available based on its configuration.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isAvailable")]
        public bool? IsAvailable { get; init; }

        /// <summary>
        /// A list of missing configuration keys if the service is unavailable.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("missingConfigurations")]
        public System.Collections.Generic.ICollection<string>? MissingConfigurations { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record StructLayoutAttribute
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public StructLayoutAttribute(object? @typeId, LayoutKind? @value)

        {

            this.TypeId = @typeId;

            this.Value = @value;

        }
        [System.Text.Json.Serialization.JsonPropertyName("typeId")]
        public object? TypeId { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LayoutKind? Value { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record SynthesizedRecipe
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SynthesizedRecipe(string? @analysis, int? @attemptCount, string? @cookTime, string? @description, System.Collections.Generic.ICollection<string>? @directions, System.Collections.Generic.ICollection<string>? @imageUrls, System.Collections.Generic.ICollection<string>? @ingredients, System.Collections.Generic.ICollection<string>? @inspiredBy, bool? @isAnalyzed, string? @notes, string? @prepTime, int? @qualityScore, System.Collections.Generic.ICollection<SynthesizedRecipe>? @revisions, string? @servings, System.Collections.Generic.ICollection<Recipe>? @sourceRecipes, string? @suggestions, string? @title, string? @totalTime)

        {

            this.Title = @title;

            this.Description = @description;

            this.Servings = @servings;

            this.PrepTime = @prepTime;

            this.CookTime = @cookTime;

            this.TotalTime = @totalTime;

            this.Ingredients = @ingredients;

            this.Directions = @directions;

            this.Notes = @notes;

            this.InspiredBy = @inspiredBy;

            this.ImageUrls = @imageUrls;

            this.SourceRecipes = @sourceRecipes;

            this.QualityScore = @qualityScore;

            this.Analysis = @analysis;

            this.Suggestions = @suggestions;

            this.AttemptCount = @attemptCount;

            this.Revisions = @revisions;

            this.IsAnalyzed = @isAnalyzed;

        }
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string? Title { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("servings")]
        public string? Servings { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("prepTime")]
        public string? PrepTime { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("cookTime")]
        public string? CookTime { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("totalTime")]
        public string? TotalTime { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("ingredients")]
        public System.Collections.Generic.ICollection<string>? Ingredients { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("directions")]
        public System.Collections.Generic.ICollection<string>? Directions { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        public string? Notes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("inspiredBy")]
        public System.Collections.Generic.ICollection<string>? InspiredBy { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrls")]
        public System.Collections.Generic.ICollection<string>? ImageUrls { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("sourceRecipes")]
        public System.Collections.Generic.ICollection<Recipe>? SourceRecipes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("qualityScore")]
        public int? QualityScore { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("analysis")]
        public string? Analysis { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("suggestions")]
        public string? Suggestions { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("attemptCount")]
        public int? AttemptCount { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("revisions")]
        public System.Collections.Generic.ICollection<SynthesizedRecipe>? Revisions { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAnalyzed")]
        public bool? IsAnalyzed { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record Type
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Type(Assembly? @assembly, string? @assemblyQualifiedName, TypeAttributes? @attributes, Type? @baseType, bool? @containsGenericParameters, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, MethodBase? @declaringMethod, Type? @declaringType, string? @fullName, GenericParameterAttributes? @genericParameterAttributes, int? @genericParameterPosition, System.Collections.Generic.ICollection<Type>? @genericTypeArguments, System.Guid? @guid, bool? @hasElementType, bool? @isAbstract, bool? @isAnsiClass, bool? @isArray, bool? @isAutoClass, bool? @isAutoLayout, bool? @isByRef, bool? @isByRefLike, bool? @isClass, bool? @isCollectible, bool? @isCOMObject, bool? @isConstructedGenericType, bool? @isContextful, bool? @isEnum, bool? @isExplicitLayout, bool? @isFunctionPointer, bool? @isGenericMethodParameter, bool? @isGenericParameter, bool? @isGenericType, bool? @isGenericTypeDefinition, bool? @isGenericTypeParameter, bool? @isImport, bool? @isInterface, bool? @isLayoutSequential, bool? @isMarshalByRef, bool? @isNested, bool? @isNestedAssembly, bool? @isNestedFamANDAssem, bool? @isNestedFamily, bool? @isNestedFamORAssem, bool? @isNestedPrivate, bool? @isNestedPublic, bool? @isNotPublic, bool? @isPointer, bool? @isPrimitive, bool? @isPublic, bool? @isSealed, bool? @isSecurityCritical, bool? @isSecuritySafeCritical, bool? @isSecurityTransparent, bool? @isSerializable, bool? @isSignatureType, bool? @isSpecialName, bool? @isSZArray, bool? @isTypeDefinition, bool? @isUnicodeClass, bool? @isUnmanagedFunctionPointer, bool? @isValueType, bool? @isVariableBoundArray, bool? @isVisible, MemberTypes? @memberType, int? @metadataToken, Module? @module, string? @name, string? @namespace, Type? @reflectedType, StructLayoutAttribute? @structLayoutAttribute, RuntimeTypeHandle? @typeHandle, ConstructorInfo? @typeInitializer, Type? @underlyingSystemType)

        {

            this.Name = @name;

            this.CustomAttributes = @customAttributes;

            this.IsCollectible = @isCollectible;

            this.MetadataToken = @metadataToken;

            this.IsInterface = @isInterface;

            this.MemberType = @memberType;

            this.Namespace = @namespace;

            this.AssemblyQualifiedName = @assemblyQualifiedName;

            this.FullName = @fullName;

            this.Assembly = @assembly;

            this.Module = @module;

            this.IsNested = @isNested;

            this.DeclaringType = @declaringType;

            this.DeclaringMethod = @declaringMethod;

            this.ReflectedType = @reflectedType;

            this.UnderlyingSystemType = @underlyingSystemType;

            this.IsTypeDefinition = @isTypeDefinition;

            this.IsArray = @isArray;

            this.IsByRef = @isByRef;

            this.IsPointer = @isPointer;

            this.IsConstructedGenericType = @isConstructedGenericType;

            this.IsGenericParameter = @isGenericParameter;

            this.IsGenericTypeParameter = @isGenericTypeParameter;

            this.IsGenericMethodParameter = @isGenericMethodParameter;

            this.IsGenericType = @isGenericType;

            this.IsGenericTypeDefinition = @isGenericTypeDefinition;

            this.IsSZArray = @isSZArray;

            this.IsVariableBoundArray = @isVariableBoundArray;

            this.IsByRefLike = @isByRefLike;

            this.IsFunctionPointer = @isFunctionPointer;

            this.IsUnmanagedFunctionPointer = @isUnmanagedFunctionPointer;

            this.HasElementType = @hasElementType;

            this.GenericTypeArguments = @genericTypeArguments;

            this.GenericParameterPosition = @genericParameterPosition;

            this.GenericParameterAttributes = @genericParameterAttributes;

            this.Attributes = @attributes;

            this.IsAbstract = @isAbstract;

            this.IsImport = @isImport;

            this.IsSealed = @isSealed;

            this.IsSpecialName = @isSpecialName;

            this.IsClass = @isClass;

            this.IsNestedAssembly = @isNestedAssembly;

            this.IsNestedFamANDAssem = @isNestedFamANDAssem;

            this.IsNestedFamily = @isNestedFamily;

            this.IsNestedFamORAssem = @isNestedFamORAssem;

            this.IsNestedPrivate = @isNestedPrivate;

            this.IsNestedPublic = @isNestedPublic;

            this.IsNotPublic = @isNotPublic;

            this.IsPublic = @isPublic;

            this.IsAutoLayout = @isAutoLayout;

            this.IsExplicitLayout = @isExplicitLayout;

            this.IsLayoutSequential = @isLayoutSequential;

            this.IsAnsiClass = @isAnsiClass;

            this.IsAutoClass = @isAutoClass;

            this.IsUnicodeClass = @isUnicodeClass;

            this.IsCOMObject = @isCOMObject;

            this.IsContextful = @isContextful;

            this.IsEnum = @isEnum;

            this.IsMarshalByRef = @isMarshalByRef;

            this.IsPrimitive = @isPrimitive;

            this.IsValueType = @isValueType;

            this.IsSignatureType = @isSignatureType;

            this.IsSecurityCritical = @isSecurityCritical;

            this.IsSecuritySafeCritical = @isSecuritySafeCritical;

            this.IsSecurityTransparent = @isSecurityTransparent;

            this.StructLayoutAttribute = @structLayoutAttribute;

            this.TypeInitializer = @typeInitializer;

            this.TypeHandle = @typeHandle;

            this.Guid = @guid;

            this.BaseType = @baseType;

            this.IsSerializable = @isSerializable;

            this.ContainsGenericParameters = @containsGenericParameters;

            this.IsVisible = @isVisible;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isInterface")]
        public bool? IsInterface { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes? MemberType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("namespace")]
        public string? Namespace { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("assemblyQualifiedName")]
        public string? AssemblyQualifiedName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("fullName")]
        public string? FullName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("assembly")]
        public Assembly? Assembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module? Module { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNested")]
        public bool? IsNested { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type? DeclaringType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringMethod")]
        public MethodBase? DeclaringMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type? ReflectedType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("underlyingSystemType")]
        public Type? UnderlyingSystemType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isTypeDefinition")]
        public bool? IsTypeDefinition { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isArray")]
        public bool? IsArray { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isByRef")]
        public bool? IsByRef { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPointer")]
        public bool? IsPointer { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericType")]
        public bool? IsConstructedGenericType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericParameter")]
        public bool? IsGenericParameter { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericTypeParameter")]
        public bool? IsGenericTypeParameter { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodParameter")]
        public bool? IsGenericMethodParameter { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericType")]
        public bool? IsGenericType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericTypeDefinition")]
        public bool? IsGenericTypeDefinition { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSZArray")]
        public bool? IsSZArray { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isVariableBoundArray")]
        public bool? IsVariableBoundArray { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isByRefLike")]
        public bool? IsByRefLike { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFunctionPointer")]
        public bool? IsFunctionPointer { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isUnmanagedFunctionPointer")]
        public bool? IsUnmanagedFunctionPointer { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("hasElementType")]
        public bool? HasElementType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("genericTypeArguments")]
        public System.Collections.Generic.ICollection<Type>? GenericTypeArguments { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("genericParameterPosition")]
        public int? GenericParameterPosition { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("genericParameterAttributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GenericParameterAttributes? GenericParameterAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public TypeAttributes? Attributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool? IsAbstract { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isImport")]
        public bool? IsImport { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSealed")]
        public bool? IsSealed { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool? IsSpecialName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isClass")]
        public bool? IsClass { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedAssembly")]
        public bool? IsNestedAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamANDAssem")]
        public bool? IsNestedFamANDAssem { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamily")]
        public bool? IsNestedFamily { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamORAssem")]
        public bool? IsNestedFamORAssem { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedPrivate")]
        public bool? IsNestedPrivate { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedPublic")]
        public bool? IsNestedPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNotPublic")]
        public bool? IsNotPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool? IsPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAutoLayout")]
        public bool? IsAutoLayout { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isExplicitLayout")]
        public bool? IsExplicitLayout { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isLayoutSequential")]
        public bool? IsLayoutSequential { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAnsiClass")]
        public bool? IsAnsiClass { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAutoClass")]
        public bool? IsAutoClass { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isUnicodeClass")]
        public bool? IsUnicodeClass { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCOMObject")]
        public bool? IsCOMObject { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isContextful")]
        public bool? IsContextful { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isEnum")]
        public bool? IsEnum { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isMarshalByRef")]
        public bool? IsMarshalByRef { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrimitive")]
        public bool? IsPrimitive { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isValueType")]
        public bool? IsValueType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSignatureType")]
        public bool? IsSignatureType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool? IsSecurityCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool? IsSecuritySafeCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool? IsSecurityTransparent { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("structLayoutAttribute")]
        public StructLayoutAttribute? StructLayoutAttribute { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("typeInitializer")]
        public ConstructorInfo? TypeInitializer { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("typeHandle")]
        public RuntimeTypeHandle? TypeHandle { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("guid")]
        public System.Guid? Guid { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("baseType")]
        public Type? BaseType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSerializable")]
        [System.Obsolete]
        public bool? IsSerializable { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool? ContainsGenericParameters { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isVisible")]
        public bool? IsVisible { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TypeAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NotPublic")]
        NotPublic = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Public")]
        Public = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedPublic")]
        NestedPublic = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedPrivate")]
        NestedPrivate = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedFamily")]
        NestedFamily = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedAssembly")]
        NestedAssembly = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedFamANDAssem")]
        NestedFamANDAssem = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"VisibilityMask")]
        VisibilityMask = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"SequentialLayout")]
        SequentialLayout = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"ExplicitLayout")]
        ExplicitLayout = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"LayoutMask")]
        LayoutMask = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"Interface")]
        Interface = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"Abstract")]
        Abstract = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"Sealed")]
        Sealed = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"Import")]
        Import = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"Serializable")]
        Serializable = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"WindowsRuntime")]
        WindowsRuntime = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"UnicodeClass")]
        UnicodeClass = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"AutoClass")]
        AutoClass = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"StringFormatMask")]
        StringFormatMask = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"HasSecurity")]
        HasSecurity = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"BeforeFieldInit")]
        BeforeFieldInit = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"CustomFormatMask")]
        CustomFormatMask = 25,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record TypeInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public TypeInfo(Assembly? @assembly, string? @assemblyQualifiedName, TypeAttributes? @attributes, Type? @baseType, bool? @containsGenericParameters, System.Collections.Generic.ICollection<CustomAttributeData>? @customAttributes, System.Collections.Generic.ICollection<ConstructorInfo>? @declaredConstructors, System.Collections.Generic.ICollection<EventInfo>? @declaredEvents, System.Collections.Generic.ICollection<FieldInfo>? @declaredFields, System.Collections.Generic.ICollection<MemberInfo>? @declaredMembers, System.Collections.Generic.ICollection<MethodInfo>? @declaredMethods, System.Collections.Generic.ICollection<TypeInfo>? @declaredNestedTypes, System.Collections.Generic.ICollection<PropertyInfo>? @declaredProperties, MethodBase? @declaringMethod, Type? @declaringType, string? @fullName, GenericParameterAttributes? @genericParameterAttributes, int? @genericParameterPosition, System.Collections.Generic.ICollection<Type>? @genericTypeArguments, System.Collections.Generic.ICollection<Type>? @genericTypeParameters, System.Guid? @guid, bool? @hasElementType, System.Collections.Generic.ICollection<Type>? @implementedInterfaces, bool? @isAbstract, bool? @isAnsiClass, bool? @isArray, bool? @isAutoClass, bool? @isAutoLayout, bool? @isByRef, bool? @isByRefLike, bool? @isClass, bool? @isCollectible, bool? @isCOMObject, bool? @isConstructedGenericType, bool? @isContextful, bool? @isEnum, bool? @isExplicitLayout, bool? @isFunctionPointer, bool? @isGenericMethodParameter, bool? @isGenericParameter, bool? @isGenericType, bool? @isGenericTypeDefinition, bool? @isGenericTypeParameter, bool? @isImport, bool? @isInterface, bool? @isLayoutSequential, bool? @isMarshalByRef, bool? @isNested, bool? @isNestedAssembly, bool? @isNestedFamANDAssem, bool? @isNestedFamily, bool? @isNestedFamORAssem, bool? @isNestedPrivate, bool? @isNestedPublic, bool? @isNotPublic, bool? @isPointer, bool? @isPrimitive, bool? @isPublic, bool? @isSealed, bool? @isSecurityCritical, bool? @isSecuritySafeCritical, bool? @isSecurityTransparent, bool? @isSerializable, bool? @isSignatureType, bool? @isSpecialName, bool? @isSZArray, bool? @isTypeDefinition, bool? @isUnicodeClass, bool? @isUnmanagedFunctionPointer, bool? @isValueType, bool? @isVariableBoundArray, bool? @isVisible, MemberTypes? @memberType, int? @metadataToken, Module? @module, string? @name, string? @namespace, Type? @reflectedType, StructLayoutAttribute? @structLayoutAttribute, RuntimeTypeHandle? @typeHandle, ConstructorInfo? @typeInitializer, Type? @underlyingSystemType)

        {

            this.Name = @name;

            this.CustomAttributes = @customAttributes;

            this.IsCollectible = @isCollectible;

            this.MetadataToken = @metadataToken;

            this.IsInterface = @isInterface;

            this.MemberType = @memberType;

            this.Namespace = @namespace;

            this.AssemblyQualifiedName = @assemblyQualifiedName;

            this.FullName = @fullName;

            this.Assembly = @assembly;

            this.Module = @module;

            this.IsNested = @isNested;

            this.DeclaringType = @declaringType;

            this.DeclaringMethod = @declaringMethod;

            this.ReflectedType = @reflectedType;

            this.UnderlyingSystemType = @underlyingSystemType;

            this.IsTypeDefinition = @isTypeDefinition;

            this.IsArray = @isArray;

            this.IsByRef = @isByRef;

            this.IsPointer = @isPointer;

            this.IsConstructedGenericType = @isConstructedGenericType;

            this.IsGenericParameter = @isGenericParameter;

            this.IsGenericTypeParameter = @isGenericTypeParameter;

            this.IsGenericMethodParameter = @isGenericMethodParameter;

            this.IsGenericType = @isGenericType;

            this.IsGenericTypeDefinition = @isGenericTypeDefinition;

            this.IsSZArray = @isSZArray;

            this.IsVariableBoundArray = @isVariableBoundArray;

            this.IsByRefLike = @isByRefLike;

            this.IsFunctionPointer = @isFunctionPointer;

            this.IsUnmanagedFunctionPointer = @isUnmanagedFunctionPointer;

            this.HasElementType = @hasElementType;

            this.GenericTypeArguments = @genericTypeArguments;

            this.GenericParameterPosition = @genericParameterPosition;

            this.GenericParameterAttributes = @genericParameterAttributes;

            this.Attributes = @attributes;

            this.IsAbstract = @isAbstract;

            this.IsImport = @isImport;

            this.IsSealed = @isSealed;

            this.IsSpecialName = @isSpecialName;

            this.IsClass = @isClass;

            this.IsNestedAssembly = @isNestedAssembly;

            this.IsNestedFamANDAssem = @isNestedFamANDAssem;

            this.IsNestedFamily = @isNestedFamily;

            this.IsNestedFamORAssem = @isNestedFamORAssem;

            this.IsNestedPrivate = @isNestedPrivate;

            this.IsNestedPublic = @isNestedPublic;

            this.IsNotPublic = @isNotPublic;

            this.IsPublic = @isPublic;

            this.IsAutoLayout = @isAutoLayout;

            this.IsExplicitLayout = @isExplicitLayout;

            this.IsLayoutSequential = @isLayoutSequential;

            this.IsAnsiClass = @isAnsiClass;

            this.IsAutoClass = @isAutoClass;

            this.IsUnicodeClass = @isUnicodeClass;

            this.IsCOMObject = @isCOMObject;

            this.IsContextful = @isContextful;

            this.IsEnum = @isEnum;

            this.IsMarshalByRef = @isMarshalByRef;

            this.IsPrimitive = @isPrimitive;

            this.IsValueType = @isValueType;

            this.IsSignatureType = @isSignatureType;

            this.IsSecurityCritical = @isSecurityCritical;

            this.IsSecuritySafeCritical = @isSecuritySafeCritical;

            this.IsSecurityTransparent = @isSecurityTransparent;

            this.StructLayoutAttribute = @structLayoutAttribute;

            this.TypeInitializer = @typeInitializer;

            this.TypeHandle = @typeHandle;

            this.Guid = @guid;

            this.BaseType = @baseType;

            this.IsSerializable = @isSerializable;

            this.ContainsGenericParameters = @containsGenericParameters;

            this.IsVisible = @isVisible;

            this.GenericTypeParameters = @genericTypeParameters;

            this.DeclaredConstructors = @declaredConstructors;

            this.DeclaredEvents = @declaredEvents;

            this.DeclaredFields = @declaredFields;

            this.DeclaredMembers = @declaredMembers;

            this.DeclaredMethods = @declaredMethods;

            this.DeclaredNestedTypes = @declaredNestedTypes;

            this.DeclaredProperties = @declaredProperties;

            this.ImplementedInterfaces = @implementedInterfaces;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData>? CustomAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool? IsCollectible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int? MetadataToken { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isInterface")]
        public bool? IsInterface { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes? MemberType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("namespace")]
        public string? Namespace { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("assemblyQualifiedName")]
        public string? AssemblyQualifiedName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("fullName")]
        public string? FullName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("assembly")]
        public Assembly? Assembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module? Module { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNested")]
        public bool? IsNested { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type? DeclaringType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringMethod")]
        public MethodBase? DeclaringMethod { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type? ReflectedType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("underlyingSystemType")]
        public Type? UnderlyingSystemType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isTypeDefinition")]
        public bool? IsTypeDefinition { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isArray")]
        public bool? IsArray { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isByRef")]
        public bool? IsByRef { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPointer")]
        public bool? IsPointer { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericType")]
        public bool? IsConstructedGenericType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericParameter")]
        public bool? IsGenericParameter { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericTypeParameter")]
        public bool? IsGenericTypeParameter { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodParameter")]
        public bool? IsGenericMethodParameter { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericType")]
        public bool? IsGenericType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericTypeDefinition")]
        public bool? IsGenericTypeDefinition { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSZArray")]
        public bool? IsSZArray { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isVariableBoundArray")]
        public bool? IsVariableBoundArray { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isByRefLike")]
        public bool? IsByRefLike { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isFunctionPointer")]
        public bool? IsFunctionPointer { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isUnmanagedFunctionPointer")]
        public bool? IsUnmanagedFunctionPointer { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("hasElementType")]
        public bool? HasElementType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("genericTypeArguments")]
        public System.Collections.Generic.ICollection<Type>? GenericTypeArguments { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("genericParameterPosition")]
        public int? GenericParameterPosition { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("genericParameterAttributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GenericParameterAttributes? GenericParameterAttributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public TypeAttributes? Attributes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool? IsAbstract { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isImport")]
        public bool? IsImport { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSealed")]
        public bool? IsSealed { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool? IsSpecialName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isClass")]
        public bool? IsClass { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedAssembly")]
        public bool? IsNestedAssembly { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamANDAssem")]
        public bool? IsNestedFamANDAssem { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamily")]
        public bool? IsNestedFamily { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamORAssem")]
        public bool? IsNestedFamORAssem { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedPrivate")]
        public bool? IsNestedPrivate { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedPublic")]
        public bool? IsNestedPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isNotPublic")]
        public bool? IsNotPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool? IsPublic { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAutoLayout")]
        public bool? IsAutoLayout { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isExplicitLayout")]
        public bool? IsExplicitLayout { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isLayoutSequential")]
        public bool? IsLayoutSequential { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAnsiClass")]
        public bool? IsAnsiClass { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isAutoClass")]
        public bool? IsAutoClass { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isUnicodeClass")]
        public bool? IsUnicodeClass { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isCOMObject")]
        public bool? IsCOMObject { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isContextful")]
        public bool? IsContextful { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isEnum")]
        public bool? IsEnum { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isMarshalByRef")]
        public bool? IsMarshalByRef { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrimitive")]
        public bool? IsPrimitive { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isValueType")]
        public bool? IsValueType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSignatureType")]
        public bool? IsSignatureType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool? IsSecurityCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool? IsSecuritySafeCritical { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool? IsSecurityTransparent { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("structLayoutAttribute")]
        public StructLayoutAttribute? StructLayoutAttribute { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("typeInitializer")]
        public ConstructorInfo? TypeInitializer { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("typeHandle")]
        public RuntimeTypeHandle? TypeHandle { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("guid")]
        public System.Guid? Guid { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("baseType")]
        public Type? BaseType { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isSerializable")]
        [System.Obsolete]
        public bool? IsSerializable { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool? ContainsGenericParameters { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("isVisible")]
        public bool? IsVisible { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("genericTypeParameters")]
        public System.Collections.Generic.ICollection<Type>? GenericTypeParameters { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredConstructors")]
        public System.Collections.Generic.ICollection<ConstructorInfo>? DeclaredConstructors { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredEvents")]
        public System.Collections.Generic.ICollection<EventInfo>? DeclaredEvents { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredFields")]
        public System.Collections.Generic.ICollection<FieldInfo>? DeclaredFields { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredMembers")]
        public System.Collections.Generic.ICollection<MemberInfo>? DeclaredMembers { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredMethods")]
        public System.Collections.Generic.ICollection<MethodInfo>? DeclaredMethods { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredNestedTypes")]
        public System.Collections.Generic.ICollection<TypeInfo>? DeclaredNestedTypes { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredProperties")]
        public System.Collections.Generic.ICollection<PropertyInfo>? DeclaredProperties { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("implementedInterfaces")]
        public System.Collections.Generic.ICollection<Type>? ImplementedInterfaces { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record UserDetails
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public UserDetails(System.Collections.Generic.ICollection<string>? @allergies, System.Collections.Generic.ICollection<string>? @cookingGoals, System.Collections.Generic.ICollection<string>? @dietaryRestrictions, string? @familyConsiderations, string? @healthFocus, int? @servingSize, string? @skillLevel, string? @timeConstraints)

        {

            this.DietaryRestrictions = @dietaryRestrictions;

            this.Allergies = @allergies;

            this.SkillLevel = @skillLevel;

            this.CookingGoals = @cookingGoals;

            this.TimeConstraints = @timeConstraints;

            this.HealthFocus = @healthFocus;

            this.FamilyConsiderations = @familyConsiderations;

            this.ServingSize = @servingSize;

        }
        [System.Text.Json.Serialization.JsonPropertyName("dietaryRestrictions")]
        public System.Collections.Generic.ICollection<string>? DietaryRestrictions { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("allergies")]
        public System.Collections.Generic.ICollection<string>? Allergies { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("skillLevel")]
        public string? SkillLevel { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("cookingGoals")]
        public System.Collections.Generic.ICollection<string>? CookingGoals { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("timeConstraints")]
        public string? TimeConstraints { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("healthFocus")]
        public string? HealthFocus { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("familyConsiderations")]
        public string? FamilyConsiderations { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("servingSize")]
        public int? ServingSize { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record UserRoleInfo
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public UserRoleInfo(string? @email, string? @userId, string? @userName)

        {

            this.UserId = @userId;

            this.UserName = @userName;

            this.Email = @email;

        }
        [System.Text.Json.Serialization.JsonPropertyName("userId")]
        public string? UserId { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("userName")]
        public string? UserName { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FileParameter
    {
        public FileParameter(System.IO.Stream data)
            : this (data, null, null)
        {
        }

        public FileParameter(System.IO.Stream data, string? fileName)
            : this (data, fileName, null)
        {
        }

        public FileParameter(System.IO.Stream data, string? fileName, string? contentType)
        {
            Data = data;
            FileName = fileName;
            ContentType = contentType;
        }

        public System.IO.Stream Data { get; private set; }

        public string? FileName { get; private set; }

        public string? ContentType { get; private set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FileResponse : System.IDisposable
    {
        private System.IDisposable? _client;
        private System.IDisposable? _response;

        public int StatusCode { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public System.IO.Stream Stream { get; private set; }

        public bool IsPartial
        {
            get { return StatusCode == 206; }
        }

        public FileResponse(int statusCode, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.IO.Stream stream, System.IDisposable? client, System.IDisposable? response)
        {
            StatusCode = statusCode;
            Headers = headers;
            Stream = stream;
            _client = client;
            _response = response;
        }

        public void Dispose()
        {
            Stream.Dispose();
            if (_response != null)
                _response.Dispose();
            if (_client != null)
                _client.Dispose();
        }
    }



}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8600
#pragma warning restore 8602
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625