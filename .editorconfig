# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

[*] # Applies to all files
end_of_line = lf
insert_final_newline = true
charset = utf-8
trim_trailing_whitespace = true

[*.{cs,csx}] # Applies to C# files
indent_style = space
indent_size = 2 # As specified in Docs/Standards/CodingStandards.md

# C# Code Style Settings: Format
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# C# Code Style Settings: Language Features / Preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion # prefer 'int' over 'System.Int32'
dotnet_style_predefined_type_for_member_access = true:suggestion # prefer 'int.MaxValue' over 'System.Int32.MaxValue'
dotnet_style_qualification_for_field = false:suggestion # Prefer 'this.' qualification only when necessary
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion
csharp_style_var_for_built_in_types = true:suggestion # prefer 'var' for built-in types
csharp_style_var_when_type_is_apparent = true:suggestion # prefer 'var' when type is obvious
csharp_style_var_elsewhere = true:suggestion # prefer 'var' elsewhere 
csharp_prefer_simple_default_expression = true:suggestion # prefer 'default' over 'default(T)'
csharp_style_prefer_switch_expression = true:suggestion # Suggest using switch expressions
csharp_style_prefer_pattern_matching = true:suggestion # Suggest using pattern matching
csharp_style_prefer_local_over_anonymous_function = true:suggestion # Prefer local functions over anonymous methods/lambdas
csharp_style_prefer_null_check_over_type_check = true:suggestion # Prefer 'is null' over '== null'
csharp_style_prefer_conditional_expression_over_assignment = true:suggestion
csharp_style_prefer_conditional_expression_over_return = true:suggestion
csharp_style_namespace_declarations = file_scoped:suggestion # Prefer file-scoped namespaces
csharp_using_directive_placement = outside_namespace:suggestion # Place 'using' directives outside namespace
csharp_style_prefer_collection_expression = true:warning # Prefer collection expressions

# C# Code Style Settings: Code Analyzers (Examples - Enable more as needed)
# Consider using a Code Analysis Rule Set (.ruleset) file for more complex configurations

# Naming Rules (can be added if needed, but often handled by IDE defaults)
# Example: dotnet_naming_rule.interface_should_be_pascal_case.severity = suggestion
# Example: dotnet_naming_rule.interface_should_be_pascal_case.symbols = interface
# Example: dotnet_naming_rule.interface_should_be_pascal_case.style = pascal_case_style
# Example: dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Code Quality / Best Practices
dotnet_diagnostic.IDE0005.severity = suggestion # Remove unnecessary using directives
dotnet_diagnostic.IDE0059.severity = warning # Remove unnecessary value assignment
dotnet_diagnostic.IDE0060.severity = warning # Remove unused parameter
dotnet_diagnostic.IDE0074.severity = suggestion # Use coalesce compound assignment
dotnet_diagnostic.CA1816.severity = warning # Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA2000.severity = warning # Dispose objects before losing scope
dotnet_diagnostic.CA2213.severity = warning # Disposable fields should be disposed
dotnet_diagnostic.CA1063.severity = warning # Implement IDisposable correctly

# Async/Await Best Practices
dotnet_diagnostic.VSTHRD103.severity = warning # Call async methods when in an async method
dotnet_diagnostic.VSTHRD002.severity = warning # Avoid problematic synchronous waits

[*.{md}] # Applies to Markdown files
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

[*.{json,yml,yaml}] # Applies to JSON/YAML files
indent_style = space
indent_size = 2
trim_trailing_whitespace = true