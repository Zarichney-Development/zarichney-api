// <auto-generated>
//     This code was generated by Refitter.
// </auto-generated>


using Refit;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using Zarichney.Client.Contracts;

#nullable enable annotations

namespace Zarichney.Client
{
    /// <summary>Gets a completion from the configured Language Model (LLM) based on either text or audio input.</summary>
    [System.CodeDom.Compiler.GeneratedCode("Refitter", "1.5.5.0")]
    public partial interface IAiApi
    {
        /// <summary>Gets a completion from the configured Language Model (LLM) based on either text or audio input.</summary>
        /// <remarks>
        /// This endpoint accepts a `multipart/form-data` request. You must provide *either* a `textPrompt` (as a form field) *or* an `audioPrompt` (as a file upload).
        /// If `audioPrompt` is provided, it will be transcribed first, and the resulting text will be used as the prompt for the LLM.
        /// Requires authentication. The session ID might be included in the response headers.
        /// </remarks>
        /// <param name="textPrompt">The text prompt to send to the LLM. Use this OR audioPrompt.</param>
        /// <param name="audioPrompt">
        /// The audio prompt (e.g., WAV, MP3, WEBM) to be transcribed and then sent to the LLM. Use this OR textPrompt.
        /// The request must use multipart/form-data encoding.
        /// </param>
        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// <item>
        /// <term>400</term>
        /// <description>Bad Request</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>Internal Server Error</description>
        /// </item>
        /// </list>
        /// </returns>
        [Multipart]
        [Headers("Accept: application/json")]
        [Post("/api/completion")]
        Task<IApiResponse<object>> Completion(string? textPrompt = default, StreamPart? audioPrompt = default, CancellationToken cancellationToken = default);

        /// <summary>Transcribes the provided audio file.</summary>
        /// <remarks>
        /// This endpoint accepts a `multipart/form-data` request containing a single audio file.
        /// The form field containing the file *must* be named 'audioFile'.
        /// It transcribes the audio, saves the original audio and the resulting transcript (e.g., to GitHub via `IGitHubService`), and returns the transcript along with file metadata.
        /// Requires authentication.
        /// </remarks>
        /// <param name="audioFile">
        /// The audio file (e.g., WAV, MP3, WEBM) to transcribe.
        /// The parameter name in the form data must be 'AudioFile'.
        /// </param>
        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// <item>
        /// <term>400</term>
        /// <description>Bad Request</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>Internal Server Error</description>
        /// </item>
        /// </list>
        /// </returns>
        [Multipart]
        [Headers("Accept: application/json")]
        [Post("/api/transcribe")]
        Task<IApiResponse<object>> Transcribe(StreamPart? audioFile = default, CancellationToken cancellationToken = default);
    }

}