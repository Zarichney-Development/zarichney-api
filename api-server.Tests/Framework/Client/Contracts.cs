//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 649 // Disable "CS0649 Field is never assigned to, and will always have its default value null"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8600 // Disable "CS8600 Converting null literal or possible null value to non-nullable type"
#pragma warning disable 8602 // Disable "CS8602 Dereference of a possibly null reference"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"
#pragma warning disable 8765 // Disable "CS8765 Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes)."

namespace Zarichney.Client.Contracts
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiErrorResult
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiKeyResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public int Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("keyValue")]
        public string KeyValue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]
        public System.DateTimeOffset CreatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]
        public System.DateTimeOffset? ExpiresAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isActive")]
        public bool IsActive { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Assembly
    {

        [System.Text.Json.Serialization.JsonPropertyName("definedTypes")]
        public System.Collections.Generic.ICollection<TypeInfo> DefinedTypes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("exportedTypes")]
        public System.Collections.Generic.ICollection<Type> ExportedTypes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("codeBase")]
        [System.Obsolete]
        public string CodeBase { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("entryPoint")]
        public MethodInfo EntryPoint { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("fullName")]
        public string FullName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("imageRuntimeVersion")]
        public string ImageRuntimeVersion { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isDynamic")]
        public bool IsDynamic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("location")]
        public string Location { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectionOnly")]
        public bool ReflectionOnly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFullyTrusted")]
        public bool IsFullyTrusted { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("escapedCodeBase")]
        [System.Obsolete]
        public string EscapedCodeBase { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("manifestModule")]
        public Module ManifestModule { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("modules")]
        public System.Collections.Generic.ICollection<Module> Modules { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("globalAssemblyCache")]
        [System.Obsolete]
        public bool GlobalAssemblyCache { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hostContext")]
        public long HostContext { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("securityRuleSet")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public SecurityRuleSet SecurityRuleSet { get; set; }

    }

    /// <summary>
    /// Standard response model for authentication operations.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AuthResponse
    {
        /// <summary>
        /// Indicates whether the operation was successful.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("success")]
        public bool Success { get; set; }

        /// <summary>
        /// A message describing the outcome of the operation.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string Message { get; set; }

        /// <summary>
        /// The email address associated with the operation, if applicable.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BadRequestObjectResult
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public object Value { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("formatters")]
        public System.Collections.Generic.ICollection<IOutputFormatter> Formatters { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("contentTypes")]
        public System.Collections.Generic.ICollection<string> ContentTypes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredType")]
        public Type DeclaredType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("statusCode")]
        public int? StatusCode { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CallingConventions
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Standard")]
        Standard = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"VarArgs")]
        VarArgs = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Any")]
        Any = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"HasThis")]
        HasThis = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"ExplicitThis")]
        ExplicitThis = 4,

    }

    /// <summary>
    /// Information about a checkout session that can be shared with clients
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CheckoutSessionInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customerEmail")]
        public string CustomerEmail { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountTotal")]
        public double? AmountTotal { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        public string Currency { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("paymentStatus")]
        public string PaymentStatus { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CheckoutUrlResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("checkoutUrl")]
        public string CheckoutUrl { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ConfigurationItemStatus
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public string Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ConstructorInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type DeclaringType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type ReflectedType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module Module { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodAttributes Attributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("methodImplementationFlags")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodImplAttributes MethodImplementationFlags { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("callingConvention")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CallingConventions CallingConvention { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool IsAbstract { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructor")]
        public bool IsConstructor { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFinal")]
        public bool IsFinal { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isHideBySig")]
        public bool IsHideBySig { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool IsSpecialName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isStatic")]
        public bool IsStatic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isVirtual")]
        public bool IsVirtual { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAssembly")]
        public bool IsAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamily")]
        public bool IsFamily { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyAndAssembly")]
        public bool IsFamilyAndAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyOrAssembly")]
        public bool IsFamilyOrAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrivate")]
        public bool IsPrivate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool IsPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericMethod")]
        public bool IsConstructedGenericMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethod")]
        public bool IsGenericMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodDefinition")]
        public bool IsGenericMethodDefinition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool ContainsGenericParameters { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("methodHandle")]
        public RuntimeMethodHandle MethodHandle { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool IsSecurityCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool IsSecuritySafeCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool IsSecurityTransparent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes MemberType { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CookbookContent
    {

        [System.Text.Json.Serialization.JsonPropertyName("recipeSpecificationType")]
        public string RecipeSpecificationType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("specificRecipes")]
        public System.Collections.Generic.ICollection<string> SpecificRecipes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("generalMealTypes")]
        public System.Collections.Generic.ICollection<string> GeneralMealTypes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("expectedRecipeCount")]
        public int ExpectedRecipeCount { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CookbookDetails
    {

        [System.Text.Json.Serialization.JsonPropertyName("theme")]
        public string Theme { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("primaryPurpose")]
        public string PrimaryPurpose { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("desiredCuisines")]
        public System.Collections.Generic.ICollection<string> DesiredCuisines { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("culturalExploration")]
        public string CulturalExploration { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("nutritionalGuidance")]
        public string NutritionalGuidance { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("recipeModification")]
        public string RecipeModification { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("ingredientFlexibility")]
        public string IngredientFlexibility { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("overallStyle")]
        public string OverallStyle { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("organization")]
        public string Organization { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("specialSections")]
        public System.Collections.Generic.ICollection<string> SpecialSections { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("storytelling")]
        public string Storytelling { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("educationalContent")]
        public System.Collections.Generic.ICollection<string> EducationalContent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("practicalFeatures")]
        public System.Collections.Generic.ICollection<string> PracticalFeatures { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CookbookOrder
    {

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cookbookContent")]
        public CookbookContent CookbookContent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cookbookDetails")]
        public CookbookDetails CookbookDetails { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("userDetails")]
        public UserDetails UserDetails { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("orderId")]
        public string OrderId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("recipeList")]
        public System.Collections.Generic.ICollection<string> RecipeList { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("synthesizedRecipes")]
        public System.Collections.Generic.ICollection<SynthesizedRecipe> SynthesizedRecipes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public OrderStatus Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("requiresPayment")]
        public bool RequiresPayment { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]
        public Customer Customer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("llmConversationId")]
        public string LlmConversationId { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CookbookOrderSubmission
    {

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cookbookContent")]
        public CookbookContent CookbookContent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cookbookDetails")]
        public CookbookDetails CookbookDetails { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("userDetails")]
        public UserDetails UserDetails { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateApiKeyCommand
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength = 1)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]
        public System.DateTimeOffset? ExpiresAt { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CustomAttributeData
    {

        [System.Text.Json.Serialization.JsonPropertyName("attributeType")]
        public Type AttributeType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("constructor")]
        public ConstructorInfo Constructor { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("constructorArguments")]
        public System.Collections.Generic.ICollection<CustomAttributeTypedArgument> ConstructorArguments { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("namedArguments")]
        public System.Collections.Generic.ICollection<CustomAttributeNamedArgument> NamedArguments { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CustomAttributeNamedArgument
    {

        [System.Text.Json.Serialization.JsonPropertyName("memberInfo")]
        public MemberInfo MemberInfo { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("typedValue")]
        public CustomAttributeTypedArgument TypedValue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("memberName")]
        public string MemberName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isField")]
        public bool IsField { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CustomAttributeTypedArgument
    {

        [System.Text.Json.Serialization.JsonPropertyName("argumentType")]
        public Type ArgumentType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public object Value { get; set; }

    }

    /// <summary>
    /// Represents a user/customer of the Cookbook service.
    /// <br/>Tracks how many recipe credits they have available (for free usage or otherwise).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Customer
    {
        /// <summary>
        /// Unique key for identifying the customer.
        /// <br/>Currently, using email as the primary key.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// How many recipes the user can still generate without paying (e.g. free allotment or purchased credits).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("availableRecipes")]
        public int AvailableRecipes { get; set; }

        /// <summary>
        /// Total number of recipes that have been synthesized for this user across all orders (historical).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lifetimeRecipesUsed")]
        public int LifetimeRecipesUsed { get; set; }

        /// <summary>
        /// Total number of recipes that have been purchased by this user (historical).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lifetimePurchasedRecipes")]
        public int LifetimePurchasedRecipes { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum EventAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EventInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type DeclaringType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type ReflectedType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module Module { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes MemberType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public EventAttributes Attributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool IsSpecialName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("addMethod")]
        public MethodInfo AddMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("removeMethod")]
        public MethodInfo RemoveMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("raiseMethod")]
        public MethodInfo RaiseMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isMulticast")]
        public bool IsMulticast { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("eventHandlerType")]
        public Type EventHandlerType { get; set; }

    }

    /// <summary>
    /// Defines all the features available in the application that can be enabled or disabled
    /// <br/>based on configuration availability.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ExternalServices
    {

        [System.Runtime.Serialization.EnumMember(Value = @"FrontEnd")]
        FrontEnd = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"OpenAiApi")]
        OpenAiApi = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"MsGraph")]
        MsGraph = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Stripe")]
        Stripe = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"GitHubAccess")]
        GitHubAccess = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"MailCheck")]
        MailCheck = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"PostgresIdentityDb")]
        PostgresIdentityDb = 6,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum FieldAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PrivateScope")]
        PrivateScope = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Private")]
        Private = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"FamANDAssem")]
        FamANDAssem = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Assembly")]
        Assembly = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Family")]
        Family = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"FamORAssem")]
        FamORAssem = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Public")]
        Public = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"FieldAccessMask")]
        FieldAccessMask = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"Static")]
        Static = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"InitOnly")]
        InitOnly = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"Literal")]
        Literal = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"NotSerialized")]
        NotSerialized = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"HasFieldRVA")]
        HasFieldRVA = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"HasFieldMarshal")]
        HasFieldMarshal = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"PinvokeImpl")]
        PinvokeImpl = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"HasDefault")]
        HasDefault = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 18,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FieldInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type DeclaringType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type ReflectedType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module Module { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes MemberType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public FieldAttributes Attributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("fieldType")]
        public Type FieldType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isInitOnly")]
        public bool IsInitOnly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isLiteral")]
        public bool IsLiteral { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNotSerialized")]
        [System.Obsolete]
        public bool IsNotSerialized { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPinvokeImpl")]
        public bool IsPinvokeImpl { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool IsSpecialName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isStatic")]
        public bool IsStatic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAssembly")]
        public bool IsAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamily")]
        public bool IsFamily { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyAndAssembly")]
        public bool IsFamilyAndAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyOrAssembly")]
        public bool IsFamilyOrAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrivate")]
        public bool IsPrivate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool IsPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool IsSecurityCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool IsSecuritySafeCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool IsSecurityTransparent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("fieldHandle")]
        public RuntimeFieldHandle FieldHandle { get; set; }

    }

    /// <summary>
    /// Request model to initiate the forgot password process.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ForgotPasswordRequest
    {
        /// <summary>
        /// The email address of the user who forgot their password.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GenericParameterAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Covariant")]
        Covariant = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Contravariant")]
        Contravariant = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"VarianceMask")]
        VarianceMask = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"ReferenceTypeConstraint")]
        ReferenceTypeConstraint = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"NotNullableValueTypeConstraint")]
        NotNullableValueTypeConstraint = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"DefaultConstructorConstraint")]
        DefaultConstructorConstraint = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialConstraintMask")]
        SpecialConstraintMask = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ICustomAttributeProvider
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IOutputFormatter
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IntPtr
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum LayoutKind
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Sequential")]
        Sequential = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Explicit")]
        Explicit = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Auto")]
        Auto = 2,

    }

    /// <summary>
    /// Request model for user login.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoginRequest
    {
        /// <summary>
        /// The user's registered email address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// The user's password.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("password")]
        public string Password { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MemberInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes MemberType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type DeclaringType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type ReflectedType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module Module { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MemberTypes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Constructor")]
        Constructor = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Event")]
        Event = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Field")]
        Field = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Method")]
        Method = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Property")]
        Property = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"TypeInfo")]
        TypeInfo = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Custom")]
        Custom = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedType")]
        NestedType = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"All")]
        All = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MethodAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PrivateScope")]
        PrivateScope = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Private")]
        Private = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"FamANDAssem")]
        FamANDAssem = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Assembly")]
        Assembly = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Family")]
        Family = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"FamORAssem")]
        FamORAssem = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Public")]
        Public = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"MemberAccessMask")]
        MemberAccessMask = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"UnmanagedExport")]
        UnmanagedExport = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"Static")]
        Static = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"Final")]
        Final = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"Virtual")]
        Virtual = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"HideBySig")]
        HideBySig = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"NewSlot")]
        NewSlot = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"CheckAccessOnOverride")]
        CheckAccessOnOverride = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"Abstract")]
        Abstract = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"PinvokeImpl")]
        PinvokeImpl = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"HasSecurity")]
        HasSecurity = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"RequireSecObject")]
        RequireSecObject = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 21,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MethodBase
    {

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes MemberType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type DeclaringType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type ReflectedType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module Module { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodAttributes Attributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("methodImplementationFlags")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodImplAttributes MethodImplementationFlags { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("callingConvention")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CallingConventions CallingConvention { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool IsAbstract { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructor")]
        public bool IsConstructor { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFinal")]
        public bool IsFinal { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isHideBySig")]
        public bool IsHideBySig { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool IsSpecialName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isStatic")]
        public bool IsStatic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isVirtual")]
        public bool IsVirtual { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAssembly")]
        public bool IsAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamily")]
        public bool IsFamily { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyAndAssembly")]
        public bool IsFamilyAndAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyOrAssembly")]
        public bool IsFamilyOrAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrivate")]
        public bool IsPrivate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool IsPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericMethod")]
        public bool IsConstructedGenericMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethod")]
        public bool IsGenericMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodDefinition")]
        public bool IsGenericMethodDefinition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool ContainsGenericParameters { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("methodHandle")]
        public RuntimeMethodHandle MethodHandle { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool IsSecurityCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool IsSecuritySafeCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool IsSecurityTransparent { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MethodImplAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"IL")]
        IL = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Native")]
        Native = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"OPTIL")]
        OPTIL = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"CodeTypeMask")]
        CodeTypeMask = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"ManagedMask")]
        ManagedMask = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"NoInlining")]
        NoInlining = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"ForwardRef")]
        ForwardRef = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"Synchronized")]
        Synchronized = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"NoOptimization")]
        NoOptimization = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"PreserveSig")]
        PreserveSig = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"AggressiveInlining")]
        AggressiveInlining = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"AggressiveOptimization")]
        AggressiveOptimization = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"InternalCall")]
        InternalCall = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"MaxMethodImplVal")]
        MaxMethodImplVal = 13,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MethodInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type DeclaringType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type ReflectedType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module Module { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodAttributes Attributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("methodImplementationFlags")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MethodImplAttributes MethodImplementationFlags { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("callingConvention")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CallingConventions CallingConvention { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool IsAbstract { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructor")]
        public bool IsConstructor { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFinal")]
        public bool IsFinal { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isHideBySig")]
        public bool IsHideBySig { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool IsSpecialName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isStatic")]
        public bool IsStatic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isVirtual")]
        public bool IsVirtual { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAssembly")]
        public bool IsAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamily")]
        public bool IsFamily { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyAndAssembly")]
        public bool IsFamilyAndAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFamilyOrAssembly")]
        public bool IsFamilyOrAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrivate")]
        public bool IsPrivate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool IsPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericMethod")]
        public bool IsConstructedGenericMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethod")]
        public bool IsGenericMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodDefinition")]
        public bool IsGenericMethodDefinition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool ContainsGenericParameters { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("methodHandle")]
        public RuntimeMethodHandle MethodHandle { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool IsSecurityCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool IsSecuritySafeCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool IsSecurityTransparent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes MemberType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("returnParameter")]
        public ParameterInfo ReturnParameter { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("returnType")]
        public Type ReturnType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("returnTypeCustomAttributes")]
        public ICustomAttributeProvider ReturnTypeCustomAttributes { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Module
    {

        [System.Text.Json.Serialization.JsonPropertyName("assembly")]
        public Assembly Assembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("fullyQualifiedName")]
        public string FullyQualifiedName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("mdStreamVersion")]
        public int MdStreamVersion { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("moduleVersionId")]
        public System.Guid ModuleVersionId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("scopeName")]
        public string ScopeName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("moduleHandle")]
        public ModuleHandle ModuleHandle { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModuleHandle
    {

        [System.Text.Json.Serialization.JsonPropertyName("mdStreamVersion")]
        public int MdStreamVersion { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class NotFoundResult
    {

        [System.Text.Json.Serialization.JsonPropertyName("statusCode")]
        public int StatusCode { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum OrderStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Submitted")]
        Submitted = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"InProgress")]
        InProgress = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Completed")]
        Completed = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Paid")]
        Paid = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Failed")]
        Failed = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"AwaitingPayment")]
        AwaitingPayment = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ParameterAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"In")]
        In = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Out")]
        Out = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Lcid")]
        Lcid = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Retval")]
        Retval = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Optional")]
        Optional = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"HasDefault")]
        HasDefault = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"HasFieldMarshal")]
        HasFieldMarshal = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved3")]
        Reserved3 = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved4")]
        Reserved4 = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 10,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ParameterInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ParameterAttributes Attributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("member")]
        public MemberInfo Member { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("parameterType")]
        public Type ParameterType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("position")]
        public int Position { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isIn")]
        public bool IsIn { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isLcid")]
        public bool IsLcid { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isOptional")]
        public bool IsOptional { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isOut")]
        public bool IsOut { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isRetval")]
        public bool IsRetval { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("defaultValue")]
        public object DefaultValue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("rawDefaultValue")]
        public object RawDefaultValue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hasDefaultValue")]
        public bool HasDefaultValue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("amount")]
        public long Amount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        public string Currency { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProblemDetails
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string Title { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public int? Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("detail")]
        public string Detail { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("instance")]
        public string Instance { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PropertyAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"HasDefault")]
        HasDefault = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved2")]
        Reserved2 = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved3")]
        Reserved3 = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Reserved4")]
        Reserved4 = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PropertyInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type DeclaringType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type ReflectedType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module Module { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes MemberType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("propertyType")]
        public Type PropertyType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public PropertyAttributes Attributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool IsSpecialName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("canRead")]
        public bool CanRead { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("canWrite")]
        public bool CanWrite { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("getMethod")]
        public MethodInfo GetMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("setMethod")]
        public MethodInfo SetMethod { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Recipe
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string Title { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("servings")]
        public string Servings { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("prepTime")]
        public string PrepTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cookTime")]
        public string CookTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalTime")]
        public string TotalTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("ingredients")]
        public System.Collections.Generic.ICollection<string> Ingredients { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("directions")]
        public System.Collections.Generic.ICollection<string> Directions { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        public string Notes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cleaned")]
        public bool Cleaned { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("recipeUrl")]
        public string RecipeUrl { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrl")]
        public string ImageUrl { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("aliases")]
        public System.Collections.Generic.ICollection<string> Aliases { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("indexTitle")]
        public string IndexTitle { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("relevancy")]
        public System.Collections.Generic.IDictionary<string, RelevancyResult> Relevancy { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RecipeCreditRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("recipeCount")]
        public int RecipeCount { get; set; }

    }

    /// <summary>
    /// Request model for user registration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RegisterRequest
    {
        /// <summary>
        /// The user's desired email address. Must be unique.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// The user's chosen password. Minimum length and complexity requirements may apply (defined server-side).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("password")]
        public string Password { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RelevancyResult
    {

        [System.Text.Json.Serialization.JsonPropertyName("query")]
        public string Query { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("score")]
        public int Score { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reasoning")]
        public string Reasoning { get; set; }

    }

    /// <summary>
    /// Request model for resending the email confirmation link.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResendConfirmationRequest
    {
        /// <summary>
        /// The email address to resend the confirmation link to.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

    }

    /// <summary>
    /// Request model to reset the password using a token.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResetPasswordRequest
    {
        /// <summary>
        /// The email address of the user resetting their password.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// The password reset token received via email.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string Token { get; set; }

        /// <summary>
        /// The user's desired new password.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("newPassword")]
        public string NewPassword { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RoleCommandResult
    {

        [System.Text.Json.Serialization.JsonPropertyName("success")]
        public bool Success { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string Message { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("roles")]
        public System.Collections.Generic.ICollection<string> Roles { get; set; }

    }

    /// <summary>
    /// Request model for assigning or removing user roles.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RoleRequest
    {
        /// <summary>
        /// The unique identifier of the target user (user ID or email address).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identifier")]
        public string Identifier { get; set; }

        /// <summary>
        /// The name of the role to add or remove (e.g., "admin", "editor"). Case sensitivity depends on the underlying store.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("roleName")]
        public string RoleName { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RuntimeFieldHandle
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public IntPtr Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RuntimeMethodHandle
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public IntPtr Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RuntimeTypeHandle
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public IntPtr Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum SecurityRuleSet
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Level1")]
        Level1 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Level2")]
        Level2 = 2,

    }

    /// <summary>
    /// Represents the status of a service based on its configuration availability.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceStatusInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("serviceName")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ExternalServices ServiceName { get; set; }

        /// <summary>
        /// Whether the service is available based on its configuration.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isAvailable")]
        public bool IsAvailable { get; set; }

        /// <summary>
        /// A list of missing configuration keys if the service is unavailable.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("missingConfigurations")]
        public System.Collections.Generic.ICollection<string> MissingConfigurations { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StructLayoutAttribute
    {

        [System.Text.Json.Serialization.JsonPropertyName("typeId")]
        public object TypeId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LayoutKind Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SynthesizedRecipe
    {

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string Title { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("servings")]
        public string Servings { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("prepTime")]
        public string PrepTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cookTime")]
        public string CookTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalTime")]
        public string TotalTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("ingredients")]
        public System.Collections.Generic.ICollection<string> Ingredients { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("directions")]
        public System.Collections.Generic.ICollection<string> Directions { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        public string Notes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("inspiredBy")]
        public System.Collections.Generic.ICollection<string> InspiredBy { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrls")]
        public System.Collections.Generic.ICollection<string> ImageUrls { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("sourceRecipes")]
        public System.Collections.Generic.ICollection<Recipe> SourceRecipes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("qualityScore")]
        public int? QualityScore { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("analysis")]
        public string Analysis { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("suggestions")]
        public string Suggestions { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("attemptCount")]
        public int AttemptCount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("revisions")]
        public System.Collections.Generic.ICollection<SynthesizedRecipe> Revisions { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAnalyzed")]
        public bool IsAnalyzed { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Type
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isInterface")]
        public bool IsInterface { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes MemberType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("namespace")]
        public string Namespace { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("assemblyQualifiedName")]
        public string AssemblyQualifiedName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("fullName")]
        public string FullName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("assembly")]
        public Assembly Assembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module Module { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNested")]
        public bool IsNested { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type DeclaringType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringMethod")]
        public MethodBase DeclaringMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type ReflectedType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("underlyingSystemType")]
        public Type UnderlyingSystemType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isTypeDefinition")]
        public bool IsTypeDefinition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isArray")]
        public bool IsArray { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isByRef")]
        public bool IsByRef { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPointer")]
        public bool IsPointer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericType")]
        public bool IsConstructedGenericType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericParameter")]
        public bool IsGenericParameter { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericTypeParameter")]
        public bool IsGenericTypeParameter { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodParameter")]
        public bool IsGenericMethodParameter { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericType")]
        public bool IsGenericType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericTypeDefinition")]
        public bool IsGenericTypeDefinition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSZArray")]
        public bool IsSZArray { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isVariableBoundArray")]
        public bool IsVariableBoundArray { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isByRefLike")]
        public bool IsByRefLike { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFunctionPointer")]
        public bool IsFunctionPointer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isUnmanagedFunctionPointer")]
        public bool IsUnmanagedFunctionPointer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hasElementType")]
        public bool HasElementType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("genericTypeArguments")]
        public System.Collections.Generic.ICollection<Type> GenericTypeArguments { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("genericParameterPosition")]
        public int GenericParameterPosition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("genericParameterAttributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GenericParameterAttributes GenericParameterAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public TypeAttributes Attributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool IsAbstract { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isImport")]
        public bool IsImport { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSealed")]
        public bool IsSealed { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool IsSpecialName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isClass")]
        public bool IsClass { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedAssembly")]
        public bool IsNestedAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamANDAssem")]
        public bool IsNestedFamANDAssem { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamily")]
        public bool IsNestedFamily { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamORAssem")]
        public bool IsNestedFamORAssem { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedPrivate")]
        public bool IsNestedPrivate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedPublic")]
        public bool IsNestedPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNotPublic")]
        public bool IsNotPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool IsPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAutoLayout")]
        public bool IsAutoLayout { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isExplicitLayout")]
        public bool IsExplicitLayout { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isLayoutSequential")]
        public bool IsLayoutSequential { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAnsiClass")]
        public bool IsAnsiClass { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAutoClass")]
        public bool IsAutoClass { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isUnicodeClass")]
        public bool IsUnicodeClass { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCOMObject")]
        public bool IsCOMObject { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isContextful")]
        public bool IsContextful { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isEnum")]
        public bool IsEnum { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isMarshalByRef")]
        public bool IsMarshalByRef { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrimitive")]
        public bool IsPrimitive { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isValueType")]
        public bool IsValueType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSignatureType")]
        public bool IsSignatureType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool IsSecurityCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool IsSecuritySafeCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool IsSecurityTransparent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("structLayoutAttribute")]
        public StructLayoutAttribute StructLayoutAttribute { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("typeInitializer")]
        public ConstructorInfo TypeInitializer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("typeHandle")]
        public RuntimeTypeHandle TypeHandle { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("guid")]
        public System.Guid Guid { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("baseType")]
        public Type BaseType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSerializable")]
        [System.Obsolete]
        public bool IsSerializable { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool ContainsGenericParameters { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isVisible")]
        public bool IsVisible { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TypeAttributes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NotPublic")]
        NotPublic = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Public")]
        Public = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedPublic")]
        NestedPublic = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedPrivate")]
        NestedPrivate = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedFamily")]
        NestedFamily = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedAssembly")]
        NestedAssembly = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"NestedFamANDAssem")]
        NestedFamANDAssem = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"VisibilityMask")]
        VisibilityMask = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"SequentialLayout")]
        SequentialLayout = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"ExplicitLayout")]
        ExplicitLayout = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"LayoutMask")]
        LayoutMask = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"Interface")]
        Interface = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"Abstract")]
        Abstract = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"Sealed")]
        Sealed = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"SpecialName")]
        SpecialName = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"RTSpecialName")]
        RTSpecialName = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"Import")]
        Import = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"Serializable")]
        Serializable = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"WindowsRuntime")]
        WindowsRuntime = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"UnicodeClass")]
        UnicodeClass = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"AutoClass")]
        AutoClass = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"StringFormatMask")]
        StringFormatMask = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"HasSecurity")]
        HasSecurity = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"ReservedMask")]
        ReservedMask = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"BeforeFieldInit")]
        BeforeFieldInit = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"CustomFormatMask")]
        CustomFormatMask = 25,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TypeInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customAttributes")]
        public System.Collections.Generic.ICollection<CustomAttributeData> CustomAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCollectible")]
        public bool IsCollectible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("metadataToken")]
        public int MetadataToken { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isInterface")]
        public bool IsInterface { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("memberType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MemberTypes MemberType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("namespace")]
        public string Namespace { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("assemblyQualifiedName")]
        public string AssemblyQualifiedName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("fullName")]
        public string FullName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("assembly")]
        public Assembly Assembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("module")]
        public Module Module { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNested")]
        public bool IsNested { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringType")]
        public Type DeclaringType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaringMethod")]
        public MethodBase DeclaringMethod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reflectedType")]
        public Type ReflectedType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("underlyingSystemType")]
        public Type UnderlyingSystemType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isTypeDefinition")]
        public bool IsTypeDefinition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isArray")]
        public bool IsArray { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isByRef")]
        public bool IsByRef { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPointer")]
        public bool IsPointer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isConstructedGenericType")]
        public bool IsConstructedGenericType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericParameter")]
        public bool IsGenericParameter { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericTypeParameter")]
        public bool IsGenericTypeParameter { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericMethodParameter")]
        public bool IsGenericMethodParameter { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericType")]
        public bool IsGenericType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isGenericTypeDefinition")]
        public bool IsGenericTypeDefinition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSZArray")]
        public bool IsSZArray { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isVariableBoundArray")]
        public bool IsVariableBoundArray { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isByRefLike")]
        public bool IsByRefLike { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isFunctionPointer")]
        public bool IsFunctionPointer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isUnmanagedFunctionPointer")]
        public bool IsUnmanagedFunctionPointer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hasElementType")]
        public bool HasElementType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("genericTypeArguments")]
        public System.Collections.Generic.ICollection<Type> GenericTypeArguments { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("genericParameterPosition")]
        public int GenericParameterPosition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("genericParameterAttributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GenericParameterAttributes GenericParameterAttributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public TypeAttributes Attributes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAbstract")]
        public bool IsAbstract { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isImport")]
        public bool IsImport { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSealed")]
        public bool IsSealed { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSpecialName")]
        public bool IsSpecialName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isClass")]
        public bool IsClass { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedAssembly")]
        public bool IsNestedAssembly { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamANDAssem")]
        public bool IsNestedFamANDAssem { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamily")]
        public bool IsNestedFamily { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedFamORAssem")]
        public bool IsNestedFamORAssem { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedPrivate")]
        public bool IsNestedPrivate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNestedPublic")]
        public bool IsNestedPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isNotPublic")]
        public bool IsNotPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPublic")]
        public bool IsPublic { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAutoLayout")]
        public bool IsAutoLayout { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isExplicitLayout")]
        public bool IsExplicitLayout { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isLayoutSequential")]
        public bool IsLayoutSequential { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAnsiClass")]
        public bool IsAnsiClass { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isAutoClass")]
        public bool IsAutoClass { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isUnicodeClass")]
        public bool IsUnicodeClass { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isCOMObject")]
        public bool IsCOMObject { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isContextful")]
        public bool IsContextful { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isEnum")]
        public bool IsEnum { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isMarshalByRef")]
        public bool IsMarshalByRef { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isPrimitive")]
        public bool IsPrimitive { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isValueType")]
        public bool IsValueType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSignatureType")]
        public bool IsSignatureType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityCritical")]
        public bool IsSecurityCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecuritySafeCritical")]
        public bool IsSecuritySafeCritical { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSecurityTransparent")]
        public bool IsSecurityTransparent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("structLayoutAttribute")]
        public StructLayoutAttribute StructLayoutAttribute { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("typeInitializer")]
        public ConstructorInfo TypeInitializer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("typeHandle")]
        public RuntimeTypeHandle TypeHandle { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("guid")]
        public System.Guid Guid { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("baseType")]
        public Type BaseType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSerializable")]
        [System.Obsolete]
        public bool IsSerializable { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("containsGenericParameters")]
        public bool ContainsGenericParameters { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isVisible")]
        public bool IsVisible { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("genericTypeParameters")]
        public System.Collections.Generic.ICollection<Type> GenericTypeParameters { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredConstructors")]
        public System.Collections.Generic.ICollection<ConstructorInfo> DeclaredConstructors { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredEvents")]
        public System.Collections.Generic.ICollection<EventInfo> DeclaredEvents { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredFields")]
        public System.Collections.Generic.ICollection<FieldInfo> DeclaredFields { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredMembers")]
        public System.Collections.Generic.ICollection<MemberInfo> DeclaredMembers { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredMethods")]
        public System.Collections.Generic.ICollection<MethodInfo> DeclaredMethods { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredNestedTypes")]
        public System.Collections.Generic.ICollection<TypeInfo> DeclaredNestedTypes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredProperties")]
        public System.Collections.Generic.ICollection<PropertyInfo> DeclaredProperties { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("implementedInterfaces")]
        public System.Collections.Generic.ICollection<Type> ImplementedInterfaces { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserDetails
    {

        [System.Text.Json.Serialization.JsonPropertyName("dietaryRestrictions")]
        public System.Collections.Generic.ICollection<string> DietaryRestrictions { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("allergies")]
        public System.Collections.Generic.ICollection<string> Allergies { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("skillLevel")]
        public string SkillLevel { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cookingGoals")]
        public System.Collections.Generic.ICollection<string> CookingGoals { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("timeConstraints")]
        public string TimeConstraints { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("healthFocus")]
        public string HealthFocus { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("familyConsiderations")]
        public string FamilyConsiderations { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("servingSize")]
        public int ServingSize { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserRoleInfo
    {

        [System.Text.Json.Serialization.JsonPropertyName("userId")]
        public string UserId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("userName")]
        public string UserName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string Email { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FileParameter
    {
        public FileParameter(System.IO.Stream data)
            : this (data, null, null)
        {
        }

        public FileParameter(System.IO.Stream data, string fileName)
            : this (data, fileName, null)
        {
        }

        public FileParameter(System.IO.Stream data, string fileName, string contentType)
        {
            Data = data;
            FileName = fileName;
            ContentType = contentType;
        }

        public System.IO.Stream Data { get; private set; }

        public string FileName { get; private set; }

        public string ContentType { get; private set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FileResponse : System.IDisposable
    {
        private System.IDisposable _client;
        private System.IDisposable _response;

        public int StatusCode { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public System.IO.Stream Stream { get; private set; }

        public bool IsPartial
        {
            get { return StatusCode == 206; }
        }

        public FileResponse(int statusCode, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.IO.Stream stream, System.IDisposable client, System.IDisposable response)
        {
            StatusCode = statusCode;
            Headers = headers;
            Stream = stream;
            _client = client;
            _response = response;
        }

        public void Dispose()
        {
            Stream.Dispose();
            if (_response != null)
                _response.Dispose();
            if (_client != null)
                _client.Dispose();
        }
    }



}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8600
#pragma warning restore 8602
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625